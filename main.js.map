{"version":3,"sources":["./src/app/notfound/notfound.component.ts","./src/app/notfound/notfound.component.html","fs (ignored)","./src/app/editpurchaseproduct/editpurchaseproduct.component.ts","./src/app/editpurchaseproduct/editpurchaseproduct.component.html","crypto (ignored)","./src/app/editallorders/editallorders.component.ts","./src/app/editallorders/editallorders.component.html","stream (ignored)","./src/app/models/product.model.ts","./src/app/navigation/sidenav-list/sidenav-list.component.ts","./src/app/navigation/sidenav-list/sidenav-list.component.html","./src/app/services/purchaseproduct.service.ts","./src/app/productsused/productsused.component.ts","./src/app/productsused/productsused.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/onlydispatch.service.ts","./src/app/services/onlycompleted.service.ts","./src/app/services/product.service.ts","./src/app/auth-guard.guard.ts","./src/app/onlycompleted/onlycompleted.component.ts","./src/app/onlycompleted/onlycompleted.component.html","./src/app/models/usedproduct.model.ts","./src/app/models/onlycompleted.model.ts","./src/app/editproducts/editproducts.component.ts","./src/app/editproducts/editproducts.component.html","./src/app/purchaseproduct/purchaseproduct.component.ts","./src/app/purchaseproduct/purchaseproduct.component.html","./src/app/services/allorders.service.ts","./src/app/models/onlyorders.model.ts","./src/app/services/usedproduct.service.ts","./src/app/addproducts/addproducts.component.ts","./src/app/addproducts/addproducts.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/addallorders/addallorders.component.ts","./src/app/addallorders/addallorders.component.html","./src/app/services/subjectservice.service.ts","./src/app/login/login.service.ts","./src/app/app.module.ts","./src/app/models/role.model.ts","./src/app/addusedproduct/addusedproduct.component.ts","./src/app/addusedproduct/addusedproduct.component.html","./src/app/models/purchaseproduct.model.ts","./src/app/services/authentication.service.ts","./src/app/onlyorders/onlyorders.component.ts","./src/app/onlyorders/onlyorders.component.html","./src/app/dispatch/dispatch.component.ts","./src/app/dispatch/dispatch.component.html","./src/app/models/allorders.model.ts","./src/app/addpurchaseproduct/addpurchaseproduct.component.ts","./src/app/addpurchaseproduct/addpurchaseproduct.component.html","./src/app/services/user.service.ts","./src/app/services/onlyorders.service.ts","./src/app/models/onlydisptach.model.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material.module.ts","./src/app/allorders/allorders.component.ts","./src/app/allorders/allorders.component.html","./src/app/editusedproduct/editusedproduct.component.ts","./src/app/editusedproduct/editusedproduct.component.html","./src/app/addclientprice/addclientprice.component.ts","./src/app/addclientprice/addclientprice.component.html","./src/main.ts","./src/app/products/products.component.ts","./src/app/products/products.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notfound',\n  templateUrl: './notfound.component.html',\n  styleUrls: ['./notfound.component.css']\n})\nexport class NotfoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!DOCTYPE html>\n<!-- Created By CodingNepal -->\n<html lang=\"en\" dir=\"ltr\">\n\n  <body>\n    <div id=\"error-page\">\n      <div class=\"content\">\n        <h2 class=\"header\" data-text=\"404\">\n404</h2>\n<h4 data-text=\"Opps! Page not found\">\nOpps! Page not found</h4>\n<p>\nSorry, the page you're looking for doesn't exist. If you think something is broken, report a problem.</p>\n<div class=\"btns\">\n          <!-- <a routerlink ='/products'>return home</a> -->\n          <!-- <a href=\"https://www.codingnepalweb.com/\">report problem</a> -->\n        </div>\n</div>\n</div>\n</body>\n</html>\n","/* (ignored) */","import { Component, OnInit,Input ,ViewChild ,Inject} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { DatePipe } from '@angular/common';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Purchaseproduct } from '../models/purchaseproduct.model'\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA,} from \"@angular/material/dialog\";\nimport { PurchaseproductService } from '../services/purchaseproduct.service';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-editpurchaseproduct',\n  templateUrl: './editpurchaseproduct.component.html',\n  styleUrls: ['./editpurchaseproduct.component.css']\n})\nexport class EditpurchaseproductComponent implements OnInit {\n\n  _id: string;\n  //public id: string;\n  allorders: Purchaseproduct;\n   employee: Purchaseproduct = new Purchaseproduct();\n   //route: any;\n   updateSongForm: FormGroup;\n   public productDetail: any;\n   tobepaid: number;\n  category2: Object;\n \n  \n\n\n  constructor(public dialogRef: MatDialogRef<EditpurchaseproductComponent>,  private router: Router,private datePipe: DatePipe, private actRoute: ActivatedRoute,public fb: FormBuilder,@Inject(MAT_DIALOG_DATA) public data: any,\n  @Inject(MAT_DIALOG_DATA) private dialogData: any, private purchaseproductService: PurchaseproductService) { }\n\n\n  ngOnInit() {\n\n    this._id = this.dialogData;     \n    console.log(\"gh\"+this._id);\n   // debugger;\n    this.purchaseproductService.getUser(this._id)\n      .subscribe(data => {\n        console.log(data,'here')\n        this.allorders = data;\n      }, error => console.log(error));\n    \n  }\n\n  inputEvent(event){\n    let purchasedate = this.datePipe.transform(new Date(event.target.value), 'yyyy-MM-dd');\n     console.log(purchasedate);\n     this.allorders.purchasedate = purchasedate;\n  \n   }\n\n   actionFunction() {\n    //  alert(\"You have logged out.\");\n    this. updateUser();\n      this.closeModal();\n    }\n    \n    closeModal() {\n      this.dialogRef.close();\n    }\n  \n\n    updateUser() {\n      this.allorders.lastupdated =  this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n   //  this.allorders.isactive ='false';\n      this.purchaseproductService.updateUser(this._id, this.allorders)\n        .subscribe(data => {\n          console.log(data);\n          this.allorders = new Purchaseproduct();\n        \n        }, error => console.log(error));\n        window.location.reload();\n    }\n  \n}\n","<div id=\"modal-content-wrapper\">\n    <form *ngIf=\"allorders\">\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n                <label for=\"purchaseorder\">Purchase Order No</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"purchaseorder\" required\n                    [(ngModel)]=\"allorders.purchaseorder\" name=\"purchaseorder\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"category\">Category</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"category\" required [(ngModel)]=\"allorders.category\"\n                    name=\"category\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"productname\">Item</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"productname\" required\n                    [(ngModel)]=\"allorders.productname\" name=\"productname\">\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"productcode\">Product Code</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"productcode\" required\n                    [(ngModel)]=\"allorders.productcode\" name=\"productcode\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n\n\n            <div class=\"form-group col-md-6\">\n                <label for=\"sellername\">Seller Name</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"sellername\" required\n                    [(ngModel)]=\"allorders.sellername\" name=\"sellername\">\n            </div>\n\n            <div class=\"form-group col-md-6\">\n                <label for=\"sellerprice\">Seller Price</label>\n                <input type=\"text\" class=\"form-control\" id=\"sellerprice\"  required\n                    [(ngModel)]=\"allorders.sellerprice\" name=\"sellerprice\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"quantitypurchased\">Quantity Purchased</label>\n                <input type=\"text\" class=\"form-control\" id=\"quantitypurchased\"\n                    [(ngModel)]=\"allorders.quantitypurchased\" name=\"quantitypurchased\">\n\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"comments\">Comments</label>\n                <textarea type=\"text\" class=\"form-control\"   [(ngModel)]=\"allorders.comments\" id=\"comments\"   name=\"comments\"></textarea>\n            </div>\n\n        </div>\n\n<div  class=\"form-row\">\n    <div class=\"form-group col-md-4\">\n        <mat-form-field>\n            <label for=\"purchasedate\">Purchased Date</label>\n            <input class=\"form-control\"  (dateInput)=\"inputEvent($event)\"\n                [(ngModel)]=\"allorders.purchasedate\" matInput [matDatepicker]=\"myPicker\" \n                value=\"{{purchasedate | date :'yyyy-MM-dd'}}\" name=\"purchasedate\" required>\n            <mat-datepicker-toggle matSuffix [for]=\"myPicker\"></mat-datepicker-toggle>\n            <mat-datepicker #myPicker></mat-datepicker>\n\n        </mat-form-field>\n\n    </div>\n</div>\n\n    </form>\n    <footer id=\"modal-footer\">\n        <button mat-raised-button id=\"modal-cancel-button\" style='margin-right:16px'\n            (click)=\"closeModal()\">Cancel</button>\n        <button mat-raised-button id=\"modal-action-button\" style='margin-right:16px'\n            (click)=\"actionFunction()\">Save</button>\n\n    </footer>\n</div>\n","/* (ignored) */","import { Component, OnInit,Input ,ViewChild ,Inject} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { DatePipe } from '@angular/common';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Product } from '../models/product.model';\nimport { Allorders } from '../models/allorders.model'\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { ProductsComponent } from '../products/products.component';\nimport { MAT_DIALOG_DATA,} from \"@angular/material/dialog\";\nimport { AllordersService } from '../services/allorders.service';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { FormControl } from '@angular/forms';\nimport { ProductService } from '../services/product.service';\n\n\n@Component({\n  selector: 'app-editallorders',\n  templateUrl: './editallorders.component.html',\n  styleUrls: ['./editallorders.component.css']\n})\nexport class EditallordersComponent implements OnInit {\n\n  _id: string;\n  //public id: string;\n  allorders: Allorders;\n   employee: Allorders = new Allorders();\n   //route: any;\n   updateSongForm: FormGroup;\n   public productDetail: any;\n   tobepaid: number;\n  category2: Object;\n  productname1: Product[];\n  \n\n\n   constructor(public dialogRef: MatDialogRef<EditallordersComponent>,private allordersService: AllordersService,  private router: Router,private datePipe: DatePipe, private actRoute: ActivatedRoute,public fb: FormBuilder,@Inject(MAT_DIALOG_DATA) public data: any,\n   @Inject(MAT_DIALOG_DATA) private dialogData: any, private productService: ProductService) { }\n\n  ngOnInit() {\n\n    this._id = this.dialogData;     \n    console.log(\"gh\"+this._id);\n   // debugger;\n    this.allordersService.getUser(this._id)\n      .subscribe(data => {\n        console.log(data,'here')\n        this.allorders = data;\n      }, error => console.log(error));\n      this.tobepaid = this.tobepaid;\n  }\n\n  addvalue()\n  {\n    //this.totalCount = 20;\n    let product1 = this.allorders;\n    let ws1 = this.allorders.clientprice;\n   // console.log(this.addProduct.get('workshop2').value);\n    let ws2 =  this.allorders.advancereceived;\n    \n    this.allorders.tobepaid = parseInt(ws1)-parseInt(ws2);\n    //this.product.controls['totalavailable'].updateValue(this.totalCount);\n   \n    console.log(this.tobepaid);\n  \n  }\n\n  inputEvent(event){\n    let expecteddate = this.datePipe.transform(new Date(event.target.value), 'yyyy-MM-dd');\n     console.log(expecteddate);\n     this.allorders.expecteddate = expecteddate\n  \n   }\n\n  actionFunction() {\n    //  alert(\"You have logged out.\");\n    this. updateUser();\n      this.closeModal();\n    }\n\n    updateUser() {\n    this.allorders.lastupdated =  this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n //  this.allorders.isactive ='false';\n    this.allordersService.updateUser(this._id, this.allorders)\n      .subscribe(data => {\n        console.log(data);\n        this.allorders = new Allorders();\n      \n      }, error => console.log(error));\n      window.location.reload();\n  }\n\n\n  closeModal() {\n    this.dialogRef.close();\n  }\n\n\n  getcategory()\n{\nthis.productService.getcategoryonly().subscribe((result) => { \nthis.category2 = result;\nconsole.log(this.category2);\n\n   })\n}\n\n  changedvalue1(v){\n   // this.emitValue.emit(this.selectedUser);\n    //console.log(this.selectedUser)\n    console.log(v);\n    this.productService.getProductbycategory(v.target.value).subscribe((result) => { \n      this.productname1 = result;  \n      console.log(result);\n   \n    }, error => console.log(error));\n\n\n  }\n}\n","<div id=\"modal-content-wrapper\">\n    <form *ngIf=\"allorders\">\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"invoiceid\">Invoice No</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"invoiceid\" required\n                    [(ngModel)]=\"allorders.invoiceid\" name=\"invoiceid\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"category\">Category</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"category\" required [(ngModel)]=\"allorders.category\"\n                    name=\"category\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"productname\">Item</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"productname\" required\n                    [(ngModel)]=\"allorders.productname\" name=\"productname\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n\n\n            <div class=\"form-group col-md-6\">\n                <label for=\"clientname\">Client Name</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"clientname\" required\n                    [(ngModel)]=\"allorders.clientname\" name=\"clientname\">\n            </div>\n\n            <div class=\"form-group col-md-6\">\n                <label for=\"clientprice\">Client Price</label>\n                <input type=\"text\" class=\"form-control\" id=\"clientprice\" (input)=\"addvalue()\" required\n                    [(ngModel)]=\"allorders.clientprice\" name=\"clientprice\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"advancereceived\">Advance Received</label>\n                <input type=\"text\" class=\"form-control\" (input)=\"addvalue()\" id=\"advancereceived\"\n                    [(ngModel)]=\"allorders.advancereceived\" name=\"advancereceived\">\n\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"tobepaid\">Balance Amount</label>\n                <input type=\"text\" class=\"form-control\" disabled required [(ngModel)]=\"allorders.tobepaid\" id=\"tobepaid\"\n                    name=\"tobepaid\">\n            </div>\n\n        </div>\n\n\n        <div class=\"form-row\">\n\n            <div class=\"form-group col-md-4\">\n                <label for=\"location\"> Location</label>\n                <!-- <input type=\"text\" class=\"form-control\" required [(ngModel)]=\"allorders.location\"  id=\"location\" name=\"location\"> -->\n                <select class=\"form-control\" required [(ngModel)]=\"allorders.location\" id=\"location\" name=\"location\">\n                    <option value=\"\" disabled selected>Select Workshop</option>\n                    <!-- <option disabled>Choose Workshop</option> -->\n                    <option selected>Workshop 1</option>\n                    <option selected>Workshop 2</option>\n                    <option selected>Workshop 3</option>\n                </select>\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"quantity\">Quantity</label>\n                <input type=\"text\" class=\"form-control\" required [(ngModel)]=\"allorders.quantity\" id=\"quantity\"\n                    name=\"quantity\">\n            </div>\n            \n\n\n        </div>\n<div  class=\"form-row\">\n    <div class=\"form-group col-md-4\">\n        <mat-form-field>\n            <label for=\"expecteddate\">Expected Date</label>\n            <input class=\"form-control\"  (dateInput)=\"inputEvent($event)\"\n                [(ngModel)]=\"allorders.expecteddate\" matInput [matDatepicker]=\"myPicker\" [min]=\"minDate\"\n                value=\"{{expecteddate | date :'yyyy-MM-dd'}}\" name=\"expecteddate\" required>\n            <mat-datepicker-toggle matSuffix [for]=\"myPicker\"></mat-datepicker-toggle>\n            <mat-datepicker #myPicker></mat-datepicker>\n\n        </mat-form-field>\n\n    </div>\n</div>\n\n    </form>\n    <footer id=\"modal-footer\">\n        <button mat-raised-button id=\"modal-cancel-button\" style='margin-right:16px'\n            (click)=\"closeModal()\">Cancel</button>\n        <button mat-raised-button id=\"modal-action-button\" style='margin-right:16px'\n            (click)=\"actionFunction()\">Save</button>\n\n    </footer>\n</div>","/* (ignored) */","export class Product {\r\n\tconstructor(){\r\n\t\tthis._id='';\r\n\t\tthis.productname = '';\r\n\t\tthis.productcode = '';\r\n        this.category = '';\r\n\t\tthis.totalavailable = '';\r\n        this.price = '';\r\n\t\tthis.workshop1 = '';\r\n        this.workshop2 = '';\r\n\t\tthis.workshop3 = '';\r\n\t\tthis.comments = '';\r\n        this.createddate = '';\r\n\t\tthis.lastupdated = '';\r\n\r\n\t}\r\n\tpublic _id;\r\n\tpublic productname;\r\n\tpublic productcode;\r\n    public category;\r\n\tpublic totalavailable;\r\n    public price;\r\n\tpublic workshop1;\r\n    public workshop2;\r\n\tpublic workshop3;\r\n\tpublic comments;\r\n    public createddate;\r\n\tpublic lastupdated;\r\n\r\n}","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { Router } from '@angular/router';\nimport { User  } from 'src/app/models/user.model';\nimport { Role  } from 'src/app/models/role.model';\n\n\n@Component({\n  selector: 'app-sidenav-list',\n  templateUrl: './sidenav-list.component.html',\n  styleUrls: ['./sidenav-list.component.css']\n})\nexport class SidenavListComponent implements OnInit {\n  user1: User;\n \n  currentUser: User;\n            \n\n  constructor(private authService: AuthenticationService,private router: Router) \n  \n  {\n    this.authService.user.subscribe(x => {\n      \n     // this.user = x\n     // console.log(this.user)\n    });\n \n    }  \n   \n\n  ngOnInit(){\n  \n    \n  }\n\n  get isAdmin() {\n    let user1 = JSON.parse(localStorage.getItem('candidate')); \n    return user1 && user1.role === Role.Admin;\n}\n\n  onLogout(){\n   \n    this.sidenavClose.emit();\n    this.authService.logout(); \n    //this.router.navigate(['/login']);     \n\n                 \n  }\n  \n \n  \n  \n  \n  @Output() sidenavClose = new EventEmitter();\n\n  public onSidenavClose = () => {\n    this.sidenavClose.emit();\n  }\n}\n","<span class=\"fill-remaining-space\" ></span>\n\n\n\n<mat-nav-list  >\n  <a mat-list-item routerLink=\"/dashboard\" (click)=\"onSidenavClose()\"  >\n    <mat-icon  >dashboard</mat-icon> <span class=\"nav-caption\"   >Dashboard</span>\n  </a>\n  <mat-divider></mat-divider>\n  <a mat-list-item routerLink=\"/products\" (click)=\"onSidenavClose()\">\n    <mat-icon>vertical_split</mat-icon> <span class=\"nav-caption\">Products</span>\n  </a>\n  <mat-divider></mat-divider>\n  <a mat-list-item routerLink=\"/purchaseproduct\" (click)=\"onSidenavClose()\">\n    <mat-icon>assignment_turned_in</mat-icon> <span class=\"nav-caption\">Purchased Products</span>\n  </a>\n  <mat-divider></mat-divider>\n\n  <a mat-list-item routerLink=\"/productsused\" (click)=\"onSidenavClose()\">\n    <mat-icon>assessment</mat-icon> <span class=\"nav-caption\">Daily Report</span>\n  </a>\n  <mat-divider></mat-divider>\n\n \n\n\n  <a mat-list-item [matMenuTriggerFor]=\"vertebrates\" style=\"color: black;\" >\n    <mat-icon>low_priority</mat-icon> <span class=\"nav-caption\">Orders</span>\n  </a>\n\n<mat-menu #vertebrates=\"matMenu\" class=\"menuu\">\n  <button mat-menu-item  routerLink=\"/allorders\" ><mat-icon>table_chart</mat-icon>All Orders</button>\n  <button mat-menu-item routerLink=\"/onlyorders\"><mat-icon>gamepad</mat-icon>Orders In Production</button>\n  <button mat-menu-item routerLink=\"/dispatch\"><mat-icon>swap_horiz</mat-icon>Dispatch</button>\n  <button mat-menu-item routerLink=\"/onlycompleted\"><mat-icon>done_all</mat-icon>Completed</button>\n\n</mat-menu>\n \n  <mat-divider></mat-divider>\n\n  <a mat-list-item routerLink=\"\"  (click)=\"onLogout()\">\n    <mat-icon>power_settings_new</mat-icon> <span class=\"nav-caption\">Logout</span>\n  </a>\n\n  <mat-divider></mat-divider>\n\n \n \n</mat-nav-list>\n\n\n<!-- <mat-list-item [matMenuTriggerFor]=\"menu\" style=\"color: black;\">\n  <mat-icon>power_settings_new</mat-icon> <span class=\"nav-caption\">Logout</span>\n</mat-list-item>\n<mat-menu #menu=\"matMenu\">\n  <a mat-list-item routerLink=\"/dispatch\"  (click)=\"onLogout()\">\n    <mat-icon>power_settings_new</mat-icon> <span class=\"nav-caption\">Logout</span>\n  </a>\n  <a mat-list-item routerLink=\"/products\" (click)=\"onSidenavClose()\">\n    <mat-icon>vertical_split</mat-icon> <span class=\"nav-caption\">Products</span>\n  </a>\n</mat-menu>\n -->\n\n\n\n\n\n<!-- \n  <mat-nav-list>\n\n    <a mat-list-item [routerLink]=\"'/Products'\"> Products </a>\n    <a mat-list-item [routerLink]=\"'/Dispatch'\"> Dispatch </a>\n    <a mat-list-item [routerLink]=\"'/Report'\"> Reports </a>\n    <a mat-list-item (click)=\"sidenav.toggle()\" href=\"\" mat-list-item>Close</a>\n\n  </mat-nav-list> -->","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Purchaseproduct } from '../models/purchaseproduct.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class PurchaseproductService {\r\n    constructor(private http: HttpClient) { }\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      };\r\n    \r\n\r\n    addproducts(addProduct: Purchaseproduct): Observable<any> {\r\n        return this.http.post<Purchaseproduct>(`${environment.apiUrl}purchaseproduct/addpurchaseproduct`, addProduct, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Purchaseproduct>('Add products'))\r\n          );\r\n      }\r\n\r\n\r\n\r\n    getAll() {\r\n        return this.http.get(`${environment.apiUrl}purchaseproduct/getpurchaseproduct`);\r\n    }\r\n\r\n\r\n\r\n    getUser(_id: string): Observable<any> {\r\n      return this.http.get(`${environment.apiUrl}purchaseproduct/getpurchaseproductbyid/${_id}`);\r\n    }\r\n\r\n    updateUser(_id: string, value: any): Observable<Object> {\r\n      return this.http.put(`${environment.apiUrl}purchaseproduct/editpurchaseproductbyid/${_id}`, value);\r\n    }\r\n\r\n\r\n    deleteUser(_id: string): Observable<any> {\r\n      return this.http.delete(`${environment.apiUrl}purchaseproduct/deletepurchaseproductbyid/${_id}`, { responseType: 'text' });\r\n    }\r\n\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n          // TODO: send the error to remote logging infrastructure\r\n          console.error(error);\r\n          // TODO: better job of transforming error for user consumption\r\n          console.log(`${operation} failed: ${error.message}`);\r\n          // Let the app keep running by returning an empty result.\r\n          return of(result as T);\r\n        };\r\n      }\r\n}","import { Component, EventEmitter, Inject, OnInit, Optional, Output, ViewChild ,Pipe, PipeTransform} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatSort } from '@angular/material/sort'\nimport { AfterViewInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AddusedproductComponent } from '../addusedproduct/addusedproduct.component';\nimport { UsedproductService } from '../services/usedproduct.service';\nimport { DatePipe } from '@angular/common';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport * as XLSX from 'xlsx';\nimport { EditusedproductComponent } from '../editusedproduct/editusedproduct.component';\n\n\n@Component({\n  selector: 'app-productsused',\n  templateUrl: './productsused.component.html',\n  styleUrls: ['./productsused.component.css']\n})\nexport class ProductsusedComponent implements OnInit {\n  displayedColumns: string[] = ['sno','productname','productcode','category','workshop1','workshop2','workshop3', 'createddate','actions'];\n\n  display = 'none';\n  patientdatasource: any;\n  //patientdatasource = new MatTableDataSource(  ); \n private _id :string;\n  route: any;\n  productname : string;\n\n  constructor(public matDialog: MatDialog, private UsedproductService: UsedproductService, private router: Router,private datePipe: DatePipe,    private spinner: NgxSpinnerService) { }\n  @ViewChild('scheduledOrdersPaginator') paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n \n  @Output() actionFunction = new EventEmitter();\n\n  loading() {\n    this.spinner.show();\n  \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.inputEvent1();\n      this.spinner.hide();\n    }, 5000);\n  };\n\n\n  ngOnInit() \n  {\n    this.loading();  \n    //this.inputEvent1();\n  }\n\n  refresh(){\n    this.spinner.show();\n    setTimeout(() => {\n      this.data();\n      this.spinner.hide();\n    }, 3000);\n    \n  }\n\ndata()\n{\n  this.UsedproductService.getAll().subscribe((result) => { \n    this.patientdatasource = result;\n    console.log(this.patientdatasource);\n    this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n    this.patientdatasource.paginator = this.paginator;\n    this.patientdatasource.sort = this.sort;\n   \n\n  })\n}\n\n\n\npublic doFilter = (value: string) => {\n  this.patientdatasource.filter = value.trim().toLocaleLowerCase();\n}\n\n\ndeleteUser(_id: string,productname:string) {\n  if(confirm(\"Are you sure to delete \"+ productname))\n   {\n  this.UsedproductService.deleteUser(_id)\n    .subscribe(\n      data => {\n        console.log(data);\n      }, \n      error => console.log(error));\n      window.location.reload();\n} }\n\nopenModal1() {\n  const dialogConfig = new MatDialogConfig();\n  // The user can't close the dialog by clicking outside its body\n  dialogConfig.disableClose = true;\n  dialogConfig.id = \"modal-component\";\n  dialogConfig.height = \"550px\";\n  dialogConfig.width = \"850px\";\n  const modalDialog = this.matDialog.open(AddusedproductComponent, dialogConfig);\n}\nopenModal(val) {\n  console.log(val); \n  const dialogConfig = new MatDialogConfig();\n  // The user can't close the dialog by clicking outside its body\n  dialogConfig.disableClose = true;\n  dialogConfig.id = \"modal-component\";\n  dialogConfig.height = \"550px\";\n  dialogConfig.width = \"850px\";\n  dialogConfig.data = val._id;\n  // https://material.angular.io/components/dialog/overview\n  const modalDialog = this.matDialog.open(EditusedproductComponent, dialogConfig);\n }\n\n\nExportTOExcel()\n{\n  console.log(\"export\");\n  const workSheet = XLSX.utils.json_to_sheet(this.patientdatasource.data, {header:[]});\n  // delete (workSheet['01'])\n  workSheet['!cols'] = [];\n  workSheet['!cols'][0] = { hidden: true };   \n  workSheet['!cols'][7] = { hidden: true };  \n  workSheet['!cols'][8] = { hidden: true };  \n  workSheet['!cols'][9] = { hidden: true };  \n  workSheet['!cols'][10] = { hidden: true };  \n  workSheet['!cols'][11] = { hidden: true };  \n  workSheet['!cols'][12] = { hidden: true }; \n  workSheet['!cols'][14] = { hidden: true }; \n  workSheet['!cols'][15] = { hidden: true }; \n  const workBook: XLSX.WorkBook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\n  \n  XLSX.writeFile(workBook,  new Date().toDateString() + ' DailyReport .xlsx');\n\n}\n\n\ninputEvent(event){\n\n let createddate = this.datePipe.transform(event.value, 'yyyy-MM-dd');\n  console.log(createddate);\n this.UsedproductService.getProductbydate(createddate)\n    .subscribe(data => {\n      console.log(data);\n      this.patientdatasource = data;\n      this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n      this.patientdatasource.paginator = this.paginator;\n      this.patientdatasource.sort = this.sort;\n      //this.gotoList();\n    }, error => console.log(error));\n console.log(Date);\n\n\n// inputEvent = (value: Date) => {\n//   Date:{{todayISOString  | date}}\n//   this.patientdatasource.filter = value.trim().toLocaleLowerCase();\n}\n\ninputEvent1(){\n\n  let createddate =  this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n   console.log(createddate);\n  this.UsedproductService.getProductbydate(createddate)\n     .subscribe(data => {\n       console.log(data);\n       this.patientdatasource = data;\n       this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n       this.patientdatasource.paginator = this.paginator;\n       this.patientdatasource.sort = this.sort;\n       //this.gotoList();\n     }, error => console.log(error));\n  console.log(Date);\n \n \n // inputEvent = (value: Date) => {\n //   Date:{{todayISOString  | date}}\n //   this.patientdatasource.filter = value.trim().toLocaleLowerCase();\n }\n\nmodelChanged(date) {\n  var theDate = new Date(Date.parse(date));\n  const localDate = theDate.toLocaleString().split(\" \");\n\n  console.log(localDate);\n}\n\nchangeEvent(event){\n  // Return date object\n  console.log(event.value);\n}\n\n\n\n\n\n}","<div class=\"form-row parent\">\n  <div class=\"col-md-4\" fxFlex=\"40%\">\n    <mat-form-field style=\"text-align:center;text-decoration: black;\">\n      <input matInput type=\"text\" style=\"color:purple;\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Filter\">\n    </mat-form-field>\n </div>\n<div class=\"col-md-4\">\n  <mat-form-field >\n    <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\"  (ngModelChange)=\"modelChanged($event.target.value)\"  (dateInput)=\"inputEvent($event)\" (dateChange)=\"changeEvent($event)\">\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n  </mat-form-field>\n  <!-- <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n    <mat-label>Choose a date</mat-label>\n    <input matInput [matDatepicker]=\"picker\"  (ngModelChange)=\"modelChanged($event)\"/>\n    <mat-datepicker-toggle matSuffix  [for]=\"picker\" ></mat-datepicker-toggle>\n    <mat-datepicker touchUi #picker color=\"primary\"></mat-datepicker>\n  </mat-form-field> -->\n</div>\n\n\n  <div >\n    <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"refresh()\"><mat-icon>cached</mat-icon></button>\n    &nbsp;&nbsp;&nbsp; \n    <button mat-button   style=\"color:#ffffff;background-color:#003366;\" (click)=\"openModal1()\">Add Used Stock</button>\n    &nbsp;&nbsp;&nbsp; \n    <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"ExportTOExcel()\"><mat-icon style=\"margin-right: 10px;\">get_app</mat-icon>Export</button>\n</div>\n\n\n</div>\n\n\n  <div class=\" test mat-elevation-z9\">\n    \n   \n  <mat-table class=\"lessons-table mat-elevation-z8\"  [dataSource]=\"patientdatasource\" matSort  matSortStart=\"desc\" >\n    <ng-container matColumnDef=\"sno\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>S.No</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson;let i = index\" >{{ i + 1 }}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"productname\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Product Name</mat-header-cell>\n        <mat-cell *matCellDef=\"let lesson\">{{lesson.productname}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"productcode\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header >Product Code</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\">{{lesson.productcode}}</mat-cell>  \n    </ng-container>\n    <ng-container matColumnDef=\"category\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Category</mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\">{{lesson.category}}</mat-cell>  \n  </ng-container>\n  \n  \n\n<ng-container matColumnDef=\"workshop1\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header>Workshop 1</mat-header-cell>\n  <mat-cell  *matCellDef=\"let lesson\">{{lesson.enterworkshop1}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"workshop2\">\n<mat-header-cell *matHeaderCellDef mat-sort-header> Workshop 2</mat-header-cell>\n<mat-cell  *matCellDef=\"let lesson\" >{{lesson.enterworkshop2}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"workshop3\">\n<mat-header-cell *matHeaderCellDef mat-sort-header>Workshop 3</mat-header-cell>\n<mat-cell  *matCellDef=\"let lesson\" >{{lesson.enterworkshop3}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"createddate\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header>Created Date</mat-header-cell>\n  <mat-cell  *matCellDef=\"let lesson\" >{{lesson.createddate | date : 'longDate'}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"actions\">\n<th mat-header-cell  *matHeaderCellDef > Actions </th>\n<td mat-cell *matCellDef=\"let lesson\"  >\n  <!-- <button mat-button >Edit</button> -->\n  <button mat-icon-button  color=\"warn\" matTooltip=\"Edit\" matTooltipPosition=\"above\" (click)=\"openModal(lesson)\"><mat-icon>more_vert</mat-icon></button>\n  <button mat-icon-button color=\"warn\"  matTooltip=\"Delete\" matTooltipPosition=\"above\"  (click)=\"deleteUser(lesson._id,lesson.productname)\"  ><mat-icon>delete</mat-icon></button>\n\n</td>\n\n</ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\" ></mat-row>\n\n</mat-table>\n<mat-paginator #scheduledOrdersPaginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n\n<!-- <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"setPageSizeOptions($event)\">\n</mat-paginator> -->\n\n<ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#1863c5\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { AllordersService } from '../services/allorders.service';\nimport { OnlyordersService } from '../services/onlyorders.service';\nimport { OnlydispatchService } from '../services/onlydispatch.service';\nimport { DatePipe } from '@angular/common';\nimport { User } from '../models/user.model';\nimport { UserService } from '../services/user.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { ProductService } from '../services/product.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  displayedColumns: string[] = ['productname','totalavailable'];\n  //loading = false;\n  users: any;\n  patientdatasource: any;\n  productname1: any;\n  ordercount: any;\n  productname2: any;\n  dispatchcount:any;\n  isLoggedIn$: Observable<boolean>;       \n         \n\n  constructor(private authService: AuthenticationService,private router: Router,private userService: UserService,private OnlyordersService: OnlyordersService,private OnlydispatchService: OnlydispatchService, private productService: ProductService,private AllordersService: AllordersService, private spinner: NgxSpinnerService,private datePipe: DatePipe,) \n  {}\n   \n\n  loading() {\n    this.spinner.show();\n  \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.changedvalue1();\n      this.changedvalue2();\n      this.changedvalue3();\n      this.data();\n      this.spinner.hide();\n    }, 5000);\n  };\n\n\n  ngOnInit() {\n   this.loading();\n  // this.isLoggedIn$ = this.authService.loggedIn; \n   // this.changedvalue1();\n}\n\n\n changedvalue1(){\n  // this.emitValue.emit(this.selectedUser);\n   //console.log(this.selectedUser)\n  \n   let expecteddate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n   this.AllordersService.getcountbydate(expecteddate).subscribe((result) => { \n     this.productname1 = result;\n    console.log(this.productname1); \n   },   \n  error => console.log(error));\n }\n\n changedvalue2(){\n  // this.emitValue.emit(this.selectedUser);\n   //console.log(this.selectedUser)\n  \n   this.OnlyordersService.getAllordercount().subscribe((result) => { \n     this.productname2 = result;\n    console.log(this.productname2); \n   },   \n  error => console.log(error));\n }\n changedvalue3(){\n \n\n   this.OnlydispatchService.getAllcount().subscribe((result) => { \n     this.dispatchcount = result;\n    console.log(this.dispatchcount); \n   },   \n  error => console.log(error));\n }\n\n data()\n {\n   this.productService.getproductleast().subscribe((result) => {\n     this.patientdatasource = result;\n     console.log(this.patientdatasource);\n     this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n \n   })\n }\n\n}\n","<!-- <h1 style=\"color: black;text-align: center;\">Dashboard</h1> -->\n<div id=\"colorchange\">\n\n\n  \n  <div id=\"wrapper\" >\n   \n\n    <div id=\"first\" class=\"lessons-table mat-elevation-z8\" title=\"hello\"\n      style=\" border-radius: 6px;box-shadow: 0 5px 10px 0 rgba(70, 76, 79, .2);\">\n      <mat-table class=\"lessons-table mat-elevation-z8\" [dataSource]=\"patientdatasource\" matSort matSortDirection=\"asc\"\n        style=\"background-color: #a0c1b9;\">\n        <ng-container matColumnDef=\"productname\">\n          <mat-header-cell *matHeaderCellDef style=\"font-size: 15px;color: black;\">Product</mat-header-cell>\n          <mat-cell *matCellDef=\"let lesson\">{{ lesson.productname }}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"totalavailable\">\n          <mat-header-cell *matHeaderCellDef style=\"font-size: 15px;color: black;margin-left: 20px;\">Low Quantity\n          </mat-header-cell>\n          <mat-cell *matCellDef=\"let lesson\" style=\"text-indent: 30px;\">{{lesson.totalavailable}}</mat-cell>\n        </ng-container>\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\" style=\"justify-self: start;;\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n      </mat-table>\n    </div>\n    <div id=\"second\">\n      <div class=\"row\">\n        <div class=\"column\">\n          <div class=\"card\" style=\"height: 178px;background-color: #90e0ef;\">\n            <!-- <p><i class=\"fa fa-user\"></i></p> -->\n            <h4 style=\"margin-bottom: 10px;font-weight: strong;font-size: 18px;color: darkslategrey;\">Orders In\n              Production</h4>\n            <div *ngFor=\"let order of productname2 | keyvalue\">\n              <h1\n                style=\"font-weight: strong;font-size: 55px;color: darkslategrey;text-align: center;padding-top: 30px;\">\n                {{order.value | json}}</h1>\n            </div>\n          </div>\n        </div>\n        <div class=\"column\">\n          <div class=\"card\" style=\"height: 178px;background-color: #88d498;color: black;\">\n            <!-- <p><i class=\"fa fa-check\"></i></p> -->\n            <h4 style=\"margin-bottom: 10px;font-weight: strong;font-size: 18px;\">Ready To Dispatch</h4>\n            <div *ngFor=\"let dispatch of dispatchcount | keyvalue\">\n              <h1 style=\"font-weight: strong;font-size: 55px;color: black;text-align: center;padding-top: 30px;\">\n                {{dispatch.value | json}}</h1>\n            </div>\n          </div>\n        </div>\n        <div class=\"column\">\n          <div class=\"card\" style=\"height: 178px;background-color: #DCE9FF;\">\n            <h4 style=\"margin-bottom: 10px;font-weight: strong;font-size: 18px;color: black;\">Expected Delivery Today\n            </h4>\n            <div *ngFor=\"let pro of productname1 | keyvalue\">\n              <h1 style=\"font-weight: strong;font-size: 55px;color: black;text-align: center;padding-top: 30px;\">\n                {{pro.value | json}}</h1>\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n      <div id=\"third\">\n\n        <iframe\n          style=\"background: #FFFFFF;border: none;border-radius: 6px;box-shadow: 0 5px 10px 0 rgba(70, 76, 79, .2);\"\n          width=\"1000\" height=\"490\"\n     src=\"https://charts.mongodb.com/charts-aep-vaybp/embed/charts?id=c99002d6-b417-4182-a3b4-54e6c125873d&autoRefresh=1800&theme=light\"></iframe>\n      </div>\n  \n  </div>\n\n  <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#1863c5\" type=\"square-jelly-box\" [fullScreen]=\"true\">\n    <p style=\"color: white\"> Loading... </p>\n  </ngx-spinner>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // apiUrl: 'http://localhost:3000/api/',\n apiUrl: 'http://aep.ap-1.evennode.com/api/',\n // apiUrl:'http://aaa-env.eba-2m32cssz.ap-south-1.elasticbeanstalk.com/api/',\n  \n  env: 'dev'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Onlydispatch } from '../models/onlydisptach.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OnlydispatchService {\r\n    constructor(private http: HttpClient) { }\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      };\r\n    \r\n      dataRow:any;\r\n\r\n    addusedproducts(addProduct: Onlydispatch): Observable<any> {\r\n        return this.http.post<Onlydispatch>(`${environment.apiUrl}onlydispatch/addonlydispatch`, addProduct, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Onlydispatch>('Add Song'))\r\n          );\r\n      }\r\n\r\n      adddispatchproducts(dataRow: Onlydispatch): Observable<any> {\r\n        return this.http.post<Onlydispatch>(`${environment.apiUrl}onlydispatch/addonlydispatch`, dataRow, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Onlydispatch>('Add Song'))\r\n          );\r\n      }\r\n\r\n\r\n    getAll() {\r\n        return this.http.get(`${environment.apiUrl}onlydispatch/getonlydispatch`);\r\n    }\r\n\r\n    getAllcount() {\r\n      return this.http.get(`${environment.apiUrl}onlydispatch/getonlydispatchcount`);\r\n  }\r\n\r\n    updateUser1(_id: string, value: any): Observable<Object> {\r\n        console.log(value);\r\n        return this.http.put(`${environment.apiUrl}onlydispatch/setisactivebyid/${_id}` , value);\r\n        \r\n      }\r\n\r\n    deleteUser(_id: string): Observable<any> {\r\n      return this.http.delete(`${environment.apiUrl}onlydispatch/deleteonlydispatchbyid/${_id}`, { responseType: 'text' });\r\n    }\r\n\r\n\r\n    getProductbydate(dispatchdate :String) {\r\n      return this.http.get<Onlydispatch[]>(`${environment.apiUrl}onlydispatch/getdispatchbydate/` + dispatchdate )\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product id retrieved: ${dispatchdate}`)),\r\n          catchError(this.handleError<Onlydispatch[]>(`Get Song id=${dispatchdate}`))\r\n          \r\n        );\r\n       \r\n    }\r\n  \r\n       \r\n\r\n\r\n\r\n\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n          // TODO: send the error to remote logging infrastructure\r\n          console.error(error);\r\n          // TODO: better job of transforming error for user consumption\r\n          console.log(`${operation} failed: ${error.message}`);\r\n          // Let the app keep running by returning an empty result.\r\n          return of(result as T);\r\n        };\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Onlycompleted } from '../models/onlycompleted.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OnlycompletedService {\r\n    constructor(private http: HttpClient) { }\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      };\r\n    \r\n      dataRow:any;\r\n\r\n    addusedproducts(addProduct: Onlycompleted): Observable<any> {\r\n        return this.http.post<Onlycompleted>(`${environment.apiUrl}onlycompleted/addonlycompleted`, addProduct, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Onlycompleted>('Add Song'))\r\n          );\r\n      }\r\n\r\n      adddispatchproducts(dataRow: Onlycompleted): Observable<any> {\r\n        return this.http.post<Onlycompleted>(`${environment.apiUrl}onlycompleted/addonlycompleted`, dataRow, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Onlycompleted>('Add Song'))\r\n          );\r\n      }\r\n\r\n\r\n    getAll() {\r\n        return this.http.get(`${environment.apiUrl}onlycompleted/getonlycompleted`);\r\n    }\r\n\r\n\r\n    deleteUser(_id: string): Observable<any> {\r\n      return this.http.delete(`${environment.apiUrl}onlycompleted/deleteonlycompletedbyid/${_id}`, { responseType: 'text' });\r\n    }\r\n\r\n    updateUser1(_id: string, value: any): Observable<Object> {\r\n        console.log(value);\r\n        return this.http.put(`${environment.apiUrl}onlycompleted/setisactivebyid/${_id}` , value);\r\n        \r\n      }\r\n    getProductbydate(completeddate :String) {\r\n      return this.http.get<Onlycompleted[]>(`${environment.apiUrl}onlycompleted/getcompletedbydate/` + completeddate )\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product id retrieved: ${completeddate}`)),\r\n          catchError(this.handleError<Onlycompleted[]>(`Get Song id=${completeddate}`))\r\n          \r\n        );\r\n       \r\n    }\r\n  \r\n       \r\n\r\n\r\n\r\n\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n          // TODO: send the error to remote logging infrastructure\r\n          console.error(error);\r\n          // TODO: better job of transforming error for user consumption\r\n          console.log(`${operation} failed: ${error.message}`);\r\n          // Let the app keep running by returning an empty result.\r\n          return of(result as T);\r\n        };\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Product } from '../models/product.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class ProductService {\r\n    constructor(private http: HttpClient) { }\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      };\r\n    \r\n\r\n    addproducts(addProduct: Product): Observable<any> {\r\n        return this.http.post<Product>(`${environment.apiUrl}products/addproduct`, addProduct, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Product>('Add products'))\r\n          );\r\n      }\r\n    \r\n      dataRow:any;\r\n\r\n\r\n    getAll() {\r\n        return this.http.get(`${environment.apiUrl}products/getproduct`);\r\n    }\r\n\r\n    getproductleast() {\r\n      return this.http.get(`${environment.apiUrl}products/getproductleast2`);\r\n  }\r\n\r\n\r\n    getcategory() {\r\n      return this.http.get(`${environment.apiUrl}products/getproductcategory`);\r\n  }\r\n\r\n  getcategoryonly() {\r\n    return this.http.get(`${environment.apiUrl}products/getproductcategoryonly`);\r\n}\r\n\r\n\r\n    getProductbycategory(category :String) {\r\n      return this.http.get<Product[]>(`${environment.apiUrl}products/getproductbycategory/` + category )\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product id retrieved: ${category}`)),\r\n          catchError(this.handleError<Product[]>(`Get Song id=${category}`))\r\n          \r\n        );\r\n       \r\n    }\r\n    \r\n    getProductcodebyproduct(productname :String) {\r\n      return this.http.get<Product[]>(`${environment.apiUrl}products/getproductcodebyproduct/` + productname )\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product id retrieved: ${productname}`)),\r\n          catchError(this.handleError<Product[]>(`Get Song id=${productname}`))\r\n          \r\n        );\r\n       \r\n    }\r\n\r\n    getUser(_id: string): Observable<any> {\r\n      return this.http.get(`${environment.apiUrl}products/getproductbyid/${_id}`);\r\n    }\r\n\r\n    updateUser(_id: string, value: any): Observable<Object> {\r\n      return this.http.put(`${environment.apiUrl}products/editproductbyid/${_id}`, value);\r\n    }\r\n\r\n    \r\n    updateUser2(productname: string, value: any): Observable<Object> {\r\n      return this.http.put(`${environment.apiUrl}products/editproductbyproductname/${productname}`, value);\r\n    }\r\n\r\n\r\n    deleteUser(_id: string): Observable<any> {\r\n      return this.http.delete(`${environment.apiUrl}products/deleteproductbyid/${_id}`, { responseType: 'text' });\r\n    }\r\n\r\n    getProductbyid(id) {\r\n      return this.http.get<Product[]>(`${environment.apiUrl}products/getproductbyid/` + id)\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product id retrieved: ${id}`)),\r\n          catchError(this.handleError<Product[]>(`Get Song id=${id}`))\r\n          \r\n        );\r\n       \r\n    }\r\n    \r\n    getProductbyname(productname) {\r\n      return this.http.get<Product[]>(`${environment.apiUrl}products/getproductdetailsbyname/` + productname)\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product name retrieved: ${productname}`)),\r\n          catchError(this.handleError<Product[]>(`Get Song id=${productname}`))\r\n          \r\n        );\r\n       \r\n    }\r\n\r\n\r\n\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n          // TODO: send the error to remote logging infrastructure\r\n          console.error(error);\r\n          // TODO: better job of transforming error for user consumption\r\n          console.log(`${operation} failed: ${error.message}`);\r\n          // Let the app keep running by returning an empty result.\r\n          return of(result as T);\r\n        };\r\n      }\r\n}","import { Injectable } from '@angular/core';\nimport { CanActivate, Router , ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { AuthenticationService } from './services/authentication.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardGuard implements CanActivate {\n\n  constructor( private authService: AuthenticationService, private router: Router, ) {}\n\n\n  // canActivate(\n  //   route: ActivatedRouteSnapshot\n  // ): Observable<boolean> | Promise<boolean> | boolean {\n  //   if (this.authService.isLoggedIn())\n  //    {\n  //       if(this.authService.isLoggedIn())\n        \n  //       {\n  //         console.log('logged in guard');\n  //     this.router.navigate(['dashboard']);\n  //           return true;\n  //       } else \n  //       {\n  //         console.log('not logged in guard');\n  //           this.router.navigate(['login']);\n  //           return false;\n  //       }\n  //   } else {\n  //     console.log('no token not logged in guard');\n  //     this.router.navigate(['landing']);\n  //     return false;\n  //   }\n\n\n  // }\n\n  // canActivate(\n  //   next: ActivatedRouteSnapshot,\n  //   state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n  //     if (this.authService.isLoggedIn) {\n  //       console.log('logged in guard');\n  //       this.router.navigate(['/dashboard']);\n  //       return true;\n  //     }\n  //     window.alert('You dont have permission to view this page');\n  //     return false;\n  // }\n\n  // canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n  //   return this.authService.isLoggedIn.pipe(\n  //     take(2),\n  //     map((isLoggedIn: boolean) => {\n  //       if (!isLoggedIn) {\n  //         this.router.navigate(['/login']);\n  //         return false;\n  //       }\n  //       if (localStorage.getItem('Token') != null) \n       \n  //       return true;\n  //       console.log('logged in guard');\n  //     //  return true;\n  //     })\n  //   );\n  // }\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const user =JSON.parse(localStorage.getItem('candidate')); \n   // const user1 = this.authService.xuser;\n    console.log(user);\n    console.log(user && user.userCredentials.role,\"fff\")\n    //const user1 = this.authService.user;\n   //  console.log(user1);\n    if (user) {\n     \n    //  if (user && user.userCredentials.role == 'Admin') \n    \n      // {\n      //  this.router.navigate(['/dashboard']);\n      //  return true;\n      // }\n      // else(user && user.userCredentials.role == 'User')\n      // {\n      //   this.router.navigate(['/products']);\n      //   return true;\n      // }\n\n        // logged in so return true\n       // if (this.authService.isLoggedIn) { return true; } \n       return true;\n    } else {\n        // not logged in so redirect to login page with the return url\n    \n        this.router.navigate(['/'], { queryParams: { returnUrl: state.url } });\n        return false;\n       \n    }\n}\n\n  // canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n  //   if (localStorage.getItem('Token') != null) return true;\n    \n  //   this.router.navigate([ '/login' ]);\n  //   return false;\n  // }\n}\n","import { Component, EventEmitter, Inject, OnInit, Optional, Output, ViewChild ,Pipe, PipeTransform} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatSort } from '@angular/material/sort'\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AllordersService } from '../services/allorders.service';\nimport { OnlyordersService } from '../services/onlyorders.service';\nimport {OnlydispatchService} from '../services/onlydispatch.service';\nimport { OnlycompletedService } from '../services/onlycompleted.service';\nimport { DatePipe } from '@angular/common';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport * as XLSX from 'xlsx';\nimport { Onlyorders } from '../models/onlyorders.model';\nimport { Allorders } from '../models/allorders.model';\nimport{ Onlydispatch} from '../models/onlydisptach.model';\nimport { Onlycompleted } from '../models/onlycompleted.model';\n\n\n@Component({\n  selector: 'app-onlycompleted',\n  templateUrl: './onlycompleted.component.html',\n  styleUrls: ['./onlycompleted.component.css']\n})\nexport class OnlycompletedComponent implements OnInit {\n  displayedColumns: string[] = ['sno','invoiceid','extracol','productname','category','quantity','clientname', 'tobepaid','location','processdate', 'dispatchdate', 'completeddate','createddate','expecteddate','actions'];\n  display = 'none';\n  patientdatasource: any;\n  //patientdatasource = new MatTableDataSource(  ); \n private _id :string;\n  route: any;\n  productname : string;\n  onlycompleted: Onlycompleted;\n  Onlycompleted = new Onlycompleted();\n  onlydispatch: Onlydispatch;\n  Onlydispatch = new Onlydispatch();\n  onlyorders: Onlyorders;\n  Onlyorders = new Onlyorders();\n  allorders: Allorders;\n  Allorders = new Allorders();\n  public isactive : boolean ;\n \n\n\n  constructor(public matDialog: MatDialog, private OnlycompletedService: OnlycompletedService, private allordersService: AllordersService,private OnlydispatchService: OnlydispatchService, private OnlyordersService: OnlyordersService, private router: Router,private datePipe: DatePipe,    private spinner: NgxSpinnerService) { }\n  @ViewChild('scheduledOrdersPaginator') paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n \n  @Output() actionFunction = new EventEmitter();\n\n  loading() {\n    this.spinner.show();\n  \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.inputEvent1();\n      this.spinner.hide();\n    }, 5000);\n  };\n\n\n  ngOnInit() \n  {\n    this.loading();  \n    //this.inputEvent1();\n  }\n\n  refresh(){\n    this.spinner.show();\n    setTimeout(() => {\n      this.data();\n      this.spinner.hide();\n    }, 3000);\n    \n  }\n\n  data()\n  {\n    this.OnlycompletedService.getAll().subscribe((result) => { \n      this.patientdatasource = result;\n      console.log(this.patientdatasource);\n      this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n      this.patientdatasource.paginator = this.paginator;\n      this.patientdatasource.sort = this.sort;\n     \n  \n    })\n  }\n\n  public doFilter = (value: string) => {\n    this.patientdatasource.filter = value.trim().toLocaleLowerCase();\n  }\n  \n  deleteUser(_id: string,invoiceid:string) {\n    if(confirm(\"Are you sure to delete \"+ invoiceid))\n     {\n    this.OnlycompletedService.deleteUser(_id)\n      .subscribe(\n        data => {\n          console.log(data);\n        }, \n        error => console.log(error));\n        window.location.reload();\n  } }\n  \n\n  ExportTOExcel()\n  {\n    console.log(\"export\");\n    const workSheet = XLSX.utils.json_to_sheet(this.patientdatasource.data, {header:[]});\n    // delete (workSheet['01'])\n    workSheet['!cols'] = [];\n    workSheet['!cols'][0] = { hidden: true };   \n    const workBook: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\n    XLSX.writeFile(workBook,  new Date().toDateString() + ' DailyOrdersCompletedReport .xlsx');\n  \n  }\n\n  inputEvent(event){\n\n    let completeddate = this.datePipe.transform(event.value, 'yyyy-MM-dd');\n     console.log(completeddate);\n    this.OnlycompletedService.getProductbydate(completeddate)\n       .subscribe(data => {\n         console.log(data);\n         this.patientdatasource = data;\n         this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n         //this.gotoList();\n       }, error => console.log(error));\n    console.log(Date);\n  \n   }\n\n   inputEvent1(){\n\n    let completeddate =  this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n     console.log(completeddate);\n    this.OnlycompletedService.getProductbydate(completeddate)\n       .subscribe(data => {\n         console.log(data);\n         this.patientdatasource = data;\n         this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n         //this.gotoList();\n       }, error => console.log(error));\n    console.log(Date);\n   \n   }\n  \n   modelChanged(date) {\n    var theDate = new Date(Date.parse(date));\n    const localDate = theDate.toLocaleString().split(\" \");\n  \n    console.log(localDate);\n  }\n  \n  changeEvent(event){\n    // Return date object\n    console.log(event.value);\n  }\n  \n\n  changeisactive(val, row)\n  { \n   row.isactive=true;\n   row.extracol=\"Done\";\n  // console.log(_id);\n  // console.log(row);\n    this.OnlycompletedService.updateUser1(val, row)\n    .subscribe((res) => {\n      row = new Onlycompleted();\n      console.log(res)\n    })\n    this.changeisactive1(val,row);\n  }\n\n  changeisactive1(val, row)\n  {\n   row.extracol=\"Full Amount Received\";\n  // console.log(_id);\n  // console.log(row);\n\n    this.allordersService.updateUser1(val, row)\n    .subscribe((res) => {\n      row = new Allorders();\n      console.log(res)\n      window.location.reload();\n      \n    })\n  \n  }\n\n}\n","<div class=\"form-row parent\">\n    <div class=\"col-md-4\" fxFlex=\"40%\">\n      <mat-form-field style=\"text-align:center;text-decoration: black;\">\n        <input matInput type=\"text\" style=\"color:purple;\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Filter\">\n      </mat-form-field>\n   </div>\n  <div class=\"col-md-4\">\n    <mat-form-field >\n      <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\"  (ngModelChange)=\"modelChanged($event.target.value)\"  (dateInput)=\"inputEvent($event)\" (dateChange)=\"changeEvent($event)\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <!-- <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n      <mat-label>Choose a date</mat-label>\n      <input matInput [matDatepicker]=\"picker\"  (ngModelChange)=\"modelChanged($event)\"/>\n      <mat-datepicker-toggle matSuffix  [for]=\"picker\" ></mat-datepicker-toggle>\n      <mat-datepicker touchUi #picker color=\"primary\"></mat-datepicker>\n    </mat-form-field> -->\n  </div>\n  \n  \n    <div >\n      <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"refresh()\"><mat-icon>cached</mat-icon></button>\n      &nbsp;&nbsp;&nbsp; \n      <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"ExportTOExcel()\"><mat-icon style=\"margin-right: 10px;\">get_app</mat-icon>Export</button>\n  </div>\n  \n  \n  </div>\n  \n  \n    <div class=\" test mat-elevation-z9\">\n      \n     \n    <mat-table class=\"lessons-table mat-elevation-z8\"  [dataSource]=\"patientdatasource\" matSort  matSortStart=\"desc\" >\n      <ng-container matColumnDef=\"sno\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>S.No</mat-header-cell>\n        <mat-cell *matCellDef=\"let lesson;let i = index\" >{{ i + 1 }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"invoiceid\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header >Invoice No</mat-header-cell>\n        <mat-cell *matCellDef=\"let lesson\">{{lesson.invoiceid}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"extracol\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\"  >{{lesson.extracol}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"productname\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header >Item</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\">{{lesson.productname}}</mat-cell>  \n    </ng-container>\n    <ng-container matColumnDef=\"category\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Category</mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\" >{{lesson.category}}</mat-cell>  \n  </ng-container>\n  <ng-container matColumnDef=\"quantity\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header  > Quantity</mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\" >{{lesson.quantity}}</mat-cell>\n  </ng-container>\n    <ng-container matColumnDef=\"clientname\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header > Client Name </mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\"  >{{lesson.clientname}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"tobepaid\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header > To Be Paid </mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\"  >{{lesson.tobepaid}}</mat-cell>\n</ng-container>\n \n<ng-container matColumnDef=\"location\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header   >Location</mat-header-cell>\n  <mat-cell  *matCellDef=\"let lesson\"   >{{lesson.location}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"processdate\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header > Process Start Date</mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\" >{{lesson.processdate | date:'mediumDate'}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"dispatchdate\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header > Dispatch Date</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\" >{{lesson.dispatchdate | date:'mediumDate'}}</mat-cell>\n        </ng-container>\n        <ng-container matColumnDef=\"completeddate\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header > Completed Date</mat-header-cell>\n            <mat-cell  *matCellDef=\"let lesson\" >{{lesson.completeddate | date:'mediumDate'}}</mat-cell>\n            </ng-container>\n<ng-container matColumnDef=\"createddate\">\n<mat-header-cell *matHeaderCellDef mat-sort-header  > Order Date</mat-header-cell>\n<mat-cell  *matCellDef=\"let lesson\" >{{lesson.createddate | date:'mediumDate'}}</mat-cell>\n\n</ng-container>\n<ng-container matColumnDef=\"expecteddate\">\n<mat-header-cell *matHeaderCellDef mat-sort-header   >Delivery Date</mat-header-cell>\n<mat-cell  *matCellDef=\"let lesson\"  >{{lesson.expecteddate | date:'mediumDate'}}</mat-cell>\n</ng-container>\n  <ng-container matColumnDef=\"actions\">\n  <th mat-header-cell  *matHeaderCellDef > Actions </th>\n  <td mat-cell *matCellDef=\"let lesson\"  >\n    <!-- <button mat-button >Edit</button> -->\n    <button mat-icon-button color=\"warn\" matTooltip=\"Amount Received\" matTooltipPosition=\"above\"  (click)=\"changeisactive(lesson._id,lesson)\" [disabled]=\"lesson.isactive\"    ><mat-icon   >swap_horiz</mat-icon></button>\n    <button mat-icon-button color=\"warn\"  matTooltip=\"Delete Order\" matTooltipPosition=\"above\" (click)=\"deleteUser(lesson._id,lesson.productname)\"  ><mat-icon>delete</mat-icon></button>\n  \n  </td>\n  \n  </ng-container>\n  \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\" ></mat-row>\n  \n  </mat-table>\n  <mat-paginator #scheduledOrdersPaginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n  \n  <!-- <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"setPageSizeOptions($event)\">\n  </mat-paginator> -->\n  \n  <ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#1863c5\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\n  </div>","export class Usedproduct {\r\n\tconstructor(){\r\n\t\tthis._id='';\r\n\t\r\n\t\tthis.productname = '';\r\n\t\tthis.productcode = '';\r\n        this.category = '';\r\n\t\tthis.enterworkshop1 = '';\r\n        this.enterworkshop2 = '';\r\n\t\tthis.enterworkshop3 = '';\r\n        this.createddate = '';\r\n\t\tthis.balanceworkshop1 = '';\r\n        this.balanceworkshop2 = '';\r\n\t\tthis.balanceworkshop3 = '';\r\n\t\tthis.pushworkshop1 = '';\r\n        this.pushworkshop2 = '';\r\n\t\tthis.pushworkshop3 = '';\r\n\t\tthis.lastupdated = '';\r\n\t\tthis.pushtotal ='';\r\n\r\n\r\n\t}\r\n\tpublic _id;\r\n\r\n\tpublic productname;\r\n\tpublic productcode;\r\n    public category;\r\n\tpublic balanceworkshop1;\r\n    public balanceworkshop2;\r\n\tpublic balanceworkshop3;\r\n    public createddate;\r\n\tpublic enterworkshop1;\r\n    public enterworkshop2;\r\n\tpublic enterworkshop3;\r\n\tpublic pushworkshop1;\r\n    public pushworkshop2;\r\n\tpublic pushworkshop3;\r\n\tpublic lastupdated;\r\n\tpublic pushtotal;\r\n\r\n}","export class Onlycompleted {\r\n\tconstructor(){\r\n\t\tthis._id='';\r\n\t\tthis.productname = '';\r\n\t\tthis.clientname = '';\r\n        this.category = '';\r\n\t\tthis.invoiceid = '';\r\n        this.clientprice = '';\r\n\t\tthis.advancereceived ='';\r\n\t\tthis.tobepaid ='';\r\n\t\tthis.extracol = '';\r\n        this.isactive = '';\r\n\t\tthis.location = '';\r\n\t\tthis.processdate ='';\r\n        this.dispatchdate = '',\r\n        this.completeddate ='',\r\n\t\tthis.expecteddate = '';\r\n        this.createddate = '';\r\n\t\tthis.lastupdated = '';\r\n\r\n\t}\r\n\tpublic _id;\r\n\tpublic productname;\r\n\tpublic clientname;\r\n    public category;\r\n\tpublic invoiceid;\r\n    public clientprice;\r\n\tpublic advancereceived;\r\n\tpublic tobepaid;\r\n\tpublic extracol;\r\n    public isactive;\r\n\tpublic location;\r\n\tpublic processdate;\r\n    public dispatchdate;\r\n    public completeddate;\r\n\tpublic expecteddate;\r\n    public createddate;\r\n\tpublic lastupdated;\r\n\r\n}","import { Component, OnInit,Input ,ViewChild ,Inject} from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { ProductService } from '../services/product.service';\nimport { DatePipe } from '@angular/common';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Product } from '../models/product.model'\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { ProductsComponent } from '../products/products.component';\nimport { MAT_DIALOG_DATA,} from \"@angular/material/dialog\";\n\n\n\n@Component({\n  selector: 'app-editproducts',\n  templateUrl: './editproducts.component.html',\n  styleUrls: ['./editproducts.component.css']\n})\nexport class EditproductsComponent implements OnInit {\n\n _id: string;\n //public id: string;\n product: Product;\n  employee: Product = new Product();\n  //route: any;\n  updateSongForm: FormGroup;\n  public productDetail: any;\n  totalavailable: number;\n \n  \n\n  constructor(public dialogRef: MatDialogRef<EditproductsComponent>, private router: Router,private datePipe: DatePipe, private actRoute: ActivatedRoute,public fb: FormBuilder,@Inject(MAT_DIALOG_DATA) public data: any,\n  @Inject(MAT_DIALOG_DATA) private dialogData: any, private productService: ProductService) { }\n\n   \n\n  \n  ngOnInit() {\n    \n    this._id = this.dialogData;     \n        console.log(\"gh\"+this._id);\n       // debugger;\n        this.productService.getUser(this._id)\n          .subscribe(data => {\n            console.log(data,'here')\n            this.product = data;\n          }, error => console.log(error));\n          this.totalavailable = this.totalavailable;\n  }\n\n  addvalue()\n  {\n    //this.totalCount = 20;\n    let product1 = this.product;\n    let ws1 = this.product.workshop1;\n   // console.log(this.addProduct.get('workshop2').value);\n    let ws2 =  this.product.workshop2;\n    let ws3 =  this.product.workshop3;\n    this.product.totalavailable = parseInt(ws1)+parseInt(ws2)+parseInt(ws3);\n    //this.product.controls['totalavailable'].updateValue(this.totalCount);\n   \n    console.log(this.totalavailable);\n  \n  }\n    \n  \n  actionFunction() {\n  //  alert(\"You have logged out.\");\n  this. updateUser();\n    this.closeModal();\n  }\n  updateUser() {\n    this.product.lastupdated =  this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    this.productService.updateUser(this._id, this.product)\n      .subscribe(data => {\n        console.log(data);\n        this.product = new Product();\n      //  this.gotoList();\n      }, error => console.log(error));\n      window.location.reload();\n  }\n\n  // gotoList() {\n  //   this.router.navigate(['/products']);\n  // }\n  closeModal() {\n    this.dialogRef.close();\n  }\n\n}\n","<div id=\"modal-content-wrapper\">\n  <form *ngIf=\"product\">\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-6\">\n        <label for=\"productname\">Product Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"productname\"  required [(ngModel)]=\"product.productname\" name=\"productname\">\n      </div>\n     <div class=\"form-group\">\n      <label for=\"productcode\">Product Code</label>\n      <input type=\"text\" class=\"form-control\" id=\"productcode\" \nrequired [(ngModel)]=\"product.productcode\" name=\"productcode\">\n    </div>\n    </div>\n    <div class=\"form-row\">\n      <div class=\"form-group col-md-4\">\n        <label for=\"price\">Price</label>\n        <input type=\"text\" class=\"form-control\" id=\"price\" \nrequired [(ngModel)]=\"product.price\" name=\"price\">\n      </div>\n\n      <div class=\"form-group col-md-4\">\n        <label for=\"category\">Category</label>\n        <input type=\"text\" class=\"form-control\" id=\"category\" \nrequired [(ngModel)]=\"product.category\" name=\"category\">\n      </div>\n    \n    <div class=\"form-group col-md-4\">\n      <label for=\"totalavailable\">Total Available</label>\n      <input type=\"text\" class=\"form-control\" id=\"totalavailable\" disabled\n      required [(ngModel)]=\"product.totalavailable\" name=\"totalavailable\">\n    </div>\n  </div>\n<div class=\"form-row\">\n  <div class=\"form-group col-md-4\">\n    <label for=\"workshop1\">Workshop 1</label>\n    <input disabled type=\"checkbox\"  class=\"custom-control-input\" >\n    <select disabled id=\"workshop11\" class=\"form-control\">\n      <option  selected>Workshop 1</option>\n    </select>\n  </div>\n  <div class=\"form-group col-md-4\">\n    <label for=\"workshop1\">Available</label>\n    <input type=\"text\" class=\"form-control\" (input)=\"addvalue()\"  required [(ngModel)]=\"product.workshop1\" id=\"workshop1\" name=\"workshop1\">\n  </div>\n\n</div>\n\n\n<div class=\"form-row\">\n\n  <div class=\"form-group col-md-4\">\n    <label for=\"workshop2\">Workshop 2</label>\n    <input disabled type=\"checkbox\" multiple=\"multiple\" class=\"custom-control-input\" >\n    <select disabled id=\"workshop22\" class=\"form-control\">\n\n      <option disabled selected>Workshop 2</option>\n\n    </select>\n  </div>\n  <div class=\"form-group col-md-4\">\n    <label for=\"workshop2\">Available</label>\n    <input type=\"text\" class=\"form-control\"  (input)=\"addvalue()\" required  [(ngModel)]=\"product.workshop2\" id=\"workshop2\" name=\"workshop2\">\n  </div>\n \n\n\n</div>\n<div class=\"form-row\">\n\n  <div class=\"form-group col-md-4\">\n    <label for=\"workshop3\">Location</label>\n    <input disabled type=\"checkbox\" multiple=\"multiple\" class=\"custom-control-input\" >\n    <select disabled id=\"workshop33\" class=\"form-control\">\n\n      <option disabled selected>workshop 3</option>\n    </select>\n  </div>\n  <div class=\"form-group col-md-4\">\n    <label for=\"inputCity\">Available</label>\n    <input type=\"text\" class=\"form-control\" (input)=\"addvalue()\" required [(ngModel)]=\"product.workshop3\" id=\"workshop3\" name=\"workshop3\">\n  </div>\n \n\n\n</div>\n\n</form>\n<footer id=\"modal-footer\">\n  <button mat-raised-button id=\"modal-cancel-button\" style='margin-right:16px' (click)=\"closeModal()\">Cancel</button>\n  <button mat-raised-button id=\"modal-action-button\" style='margin-right:16px' (click)=\"actionFunction()\">Save</button>\n\n</footer>\n</div>\n\n\n\n<!-- <form [formGroup]=\"updateSongForm\" (ngSubmit)=\"actionFunction()\">\n  <div class=\"form-group\">\n      <label>Song name</label>\n      <input type=\"text\" class=\"form-control\" name=\"productname\"   required=\"required\" />\n      <p>{{productDetail.id}</p>\n  </div>\n  <div class=\"form-group\">\n      <label>Artist name</label>\n      <input type=\"text\" class=\"form-control\" name=\"productcode\" required=\"required\" />\n  </div>\n  <div class=\"form-group\">\n    <label>Artist </label>\n    <input type=\"text\" class=\"form-control\" name=\"price\" required=\"required\" />\n</div>\n  <button type=\"submit\" class=\"btn btn-primary btn-block\">Update Song</button>\n</form> -->\n\n\n\n\n\n\n\n\n<!-- <h3>Update User</h3>\n<div  style=\"width: 500px;\">\n  <form (ngSubmit)=\"actionFunction()\">\n    <div class=\"form-group\">\n      <label for=\"productname\">First Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"productname\" \nrequired [(ngModel)]=\"product.productname\" name=\"productname\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"productcode\">Last Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"productcode\" \nrequired [(ngModel)]=\"product.productcode\" name=\"productcode\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"price\">Email Id</label>\n      <input type=\"text\" class=\"form-control\" id=\"price\" \nrequired [(ngModel)]=\"product.price\" name=\"price\">\n    </div>\n\n    <button type=\"submit\" (click)=\"closeModal()\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div> -->","import { Component, EventEmitter, Inject, OnInit, Optional, Output, ViewChild ,Pipe, PipeTransform} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatSort } from '@angular/material/sort'\nimport { AfterViewInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AddpurchaseproductComponent } from '../addpurchaseproduct/addpurchaseproduct.component';\nimport { DatePipe } from '@angular/common';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport * as XLSX from 'xlsx';\nimport { EditpurchaseproductComponent } from '../editpurchaseproduct/editpurchaseproduct.component';\nimport { PurchaseproductService } from '../services/purchaseproduct.service';\n\n\n\n\n@Component({\n  selector: 'app-purchaseproduct',\n  templateUrl: './purchaseproduct.component.html',\n  styleUrls: ['./purchaseproduct.component.css']\n})\nexport class PurchaseproductComponent implements OnInit {\n\n  displayedColumns: string[] = ['sno','purchaseorder','category','productname','productcode','sellername','sellerprice', 'purchasedate','createddate','lastupdated','actions'];\n\n  \n  display = 'none';\n  patientdatasource: any;\n  //patientdatasource = new MatTableDataSource(  ); \n private _id :string;\n  route: any;\n  productname : string;\n  dataRow:any;\n  productleast: Object;\n\n\n  constructor(public matDialog: MatDialog, private purchaseproductService: PurchaseproductService,private datePipe: DatePipe, private router: Router,  private spinner: NgxSpinnerService) { }\n  @ViewChild('scheduledOrdersPaginator') paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n \n  @Output() actionFunction = new EventEmitter();\n\n\n  ngOnInit() {\n    this.loading();\n  }\n  loading() {\n    this.spinner.show();\n  \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.data();\n      this.spinner.hide();\n    }, 5000);\n  };\n\n  public doFilter = (value: string) => {\n    this.patientdatasource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  data()\n  {\n    this.purchaseproductService.getAll().subscribe((result) => {\n      this.patientdatasource = result;\n      console.log(this.patientdatasource);\n      this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n      this.patientdatasource.paginator = this.paginator;\n      this.patientdatasource.sort = this.sort;\n     \n\n    })\n  }\n\n\n  openModal(val) {\n    console.log(val);\n    \n    const dialogConfig = new MatDialogConfig();\n    // The user can't close the dialog by clicking outside its body\n    dialogConfig.disableClose = true;\n\n    dialogConfig.id = \"modal-component\";\n    dialogConfig.height = \"550px\";\n    dialogConfig.width = \"850px\";\n    dialogConfig.data = val._id;\n    // https://material.angular.io/components/dialog/overview\n    const modalDialog = this.matDialog.open(EditpurchaseproductComponent, dialogConfig);\n   \n}\n\n\nopenModal1() {\n  const dialogConfig = new MatDialogConfig();\n  // The user can't close the dialog by clicking outside its body\n  dialogConfig.disableClose = true;\n  dialogConfig.id = \"modal-component\";\n  dialogConfig.height = \"550px\";\n  dialogConfig.width = \"850px\";\n  \n  const modalDialog = this.matDialog.open(AddpurchaseproductComponent, dialogConfig);\n}\n\n\ndeleteUser(_id: string,productname:string) {\n  if(confirm(\"Are you sure to delete \"+ productname)) {\n  this.purchaseproductService.deleteUser(_id)\n    .subscribe(\n      data => {\n        console.log(data);\n      //  this.reloadData();\n      },\n      error => console.log(error));\n      window.location.reload();\n}}\n\nExportTOExcel()\n{\n  console.log(\"export\");\n  const workSheet = XLSX.utils.json_to_sheet(this.patientdatasource.data, {header:[]});\n  workSheet['!cols'] = [];\n  workSheet['!cols'][0] = { hidden: true };  \n  workSheet['!cols'][12] = { hidden: true }; \n  const workBook: XLSX.WorkBook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\n  XLSX.writeFile(workBook, 'PurchasedProducts.xlsx');\n\n}\n\n\n\n}\n","<!-- <div>\n  <mat-form-field >\n    <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Filter\">\n  </mat-form-field>\n\n    <button mat-raised-button  style=\"color:black;display: block;margin-block-start: 20px;margin-left: 1200px;margin-bottom: 0%;\"  (click)=\"openModal1()\">Add Products</button>\n  </div> -->\n  <ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#1863c5\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\n  <div class=\"form-row parent\">\n    <div class=\"col-md-6\" fxFlex=\"40%\">\n      <mat-form-field style=\"text-align:center;text-decoration: black;\">\n        <input matInput type=\"text\" style=\"color:purple;\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Filter\">\n      </mat-form-field>\n   </div>\n  \n    <div >\n      <button mat-button   style=\"color:#ffffff;background-color:#003366;\" (click)=\"openModal1()\">Add  Purchase Products</button>\n      &nbsp;&nbsp;&nbsp; \n      <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"ExportTOExcel()\"><mat-icon style=\"margin-right: 10px;\">get_app</mat-icon>Export</button>\n  </div>\n  \n  </div>\n\n\n\n\n\n\n\n\n    <div class=\" test mat-elevation-z9\">\n      \n     \n    <mat-table class=\"lessons-table mat-elevation-z8\"  [dataSource]=\"patientdatasource\" matSort  matSortStart=\"desc\" >\n      <ng-container matColumnDef=\"sno\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>S.No</mat-header-cell>\n        <mat-cell *matCellDef=\"let lesson;let i = index\" >{{ i + 1 }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"purchaseorder\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Purchase Order No.</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\">{{lesson.purchaseorder}}</mat-cell>\n    </ng-container>\n      <ng-container matColumnDef=\"productname\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Product Name</mat-header-cell>\n          <mat-cell *matCellDef=\"let lesson\">{{lesson.productname}}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"productcode\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header >Product Code</mat-header-cell>\n          <mat-cell  *matCellDef=\"let lesson\">{{lesson.productcode}}</mat-cell>  \n      </ng-container>\n      <ng-container matColumnDef=\"category\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header >Category</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\">{{lesson.category}}</mat-cell>  \n    </ng-container>\n    <ng-container matColumnDef=\"sellername\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Dealer Name</mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\"  >{{lesson.sellername}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"sellerprice\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Purchased Price </mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\" >{{lesson.sellerprice}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"purchasedate\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header>Purchase Date </mat-header-cell>\n  <mat-cell  *matCellDef=\"let lesson\"  style=\"text-indent: 35px;\" >{{lesson.purchasedate  | date : 'longDate'}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"createddate\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Created Date </mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\"  style=\"text-indent: 35px;max-width: 150px;\" >{{lesson.createddate  | date : 'longDate'}}</mat-cell>\n  </ng-container>\n<ng-container matColumnDef=\"lastupdated\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Last Updated </mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\"  style=\"text-indent: 35px;max-width: 150px;\" >{{lesson.lastupdated  | date : 'longDate'}}</mat-cell>\n  </ng-container>\n<ng-container matColumnDef=\"actions\">\n  <th mat-header-cell  *matHeaderCellDef > Actions </th>\n  <td mat-cell *matCellDef=\"let lesson\"  >\n    <!-- <button mat-button >Edit</button> -->\n    <button mat-icon-button  matTooltip=\"Edit\" matTooltipPosition=\"above\" color=\"warn\"  (click)=\"openModal(lesson)\"><mat-icon>more_vert</mat-icon></button>\n    <button mat-icon-button  matTooltip=\"Delete Product\" matTooltipPosition=\"above\" color=\"warn\" (click)=\"deleteUser(lesson._id,lesson.productname)\"  ><mat-icon>delete</mat-icon></button>\n\n  </td>\n\n</ng-container>\n  \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\" ></mat-row>\n  \n  </mat-table>\n  <mat-paginator #scheduledOrdersPaginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n\n  <!-- <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"setPageSizeOptions($event)\">\n  </mat-paginator> -->\n\n\n</div>","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Allorders } from '../models/allorders.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AllordersService {\r\n    constructor(private http: HttpClient) { }\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      };\r\n    \r\n      dataRow:any;\r\n\r\n    addallorders(addProduct: Allorders): Observable<any> {\r\n        return this.http.post<Allorders>(`${environment.apiUrl}allorders/addorders`, addProduct, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Allorders>('Add Song'))\r\n          );\r\n      }\r\n\r\n      adddispatchproducts(dataRow: Allorders): Observable<any> {\r\n        return this.http.post<Allorders>(`${environment.apiUrl}allorders/addorders`, dataRow, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Allorders>('Add Song'))\r\n          );\r\n      }\r\n\r\n\r\n    getAll() {\r\n        return this.http.get(`${environment.apiUrl}allorders/getorders`);\r\n    }\r\n\r\n\r\n    deleteUser(_id: string): Observable<any> {\r\n      return this.http.delete(`${environment.apiUrl}allorders/deleteorderbyid/${_id}`, { responseType: 'text' });\r\n    }\r\n\r\n    getUser(_id: string): Observable<any> {\r\n      return this.http.get(`${environment.apiUrl}allorders/getorderbyid/${_id}`);\r\n    }\r\n\r\n    updateUser(_id: string, value: any): Observable<Object> {\r\n      return this.http.put(`${environment.apiUrl}allorders/editorderbyid/${_id}` , value);\r\n    }\r\n\r\n\r\n    updateUser1(_id: string, value: any): Observable<Object> {\r\n      console.log(value);\r\n      return this.http.put(`${environment.apiUrl}allorders/setisactivebyid/${_id}` , value);\r\n      \r\n    }\r\n\r\n\r\n    getcountbydate(expecteddate :String) {\r\n      return this.http.get<Allorders[]>(`${environment.apiUrl}allorders/getproductbydatee/` + expecteddate )\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product id retrieved: ${expecteddate}`)),\r\n          catchError(this.handleError<Allorders[]>(`Get Song id=${expecteddate}`))\r\n          \r\n        );\r\n        }\r\n    getProductbydate(createddate :String) {\r\n      return this.http.get<Allorders[]>(`${environment.apiUrl}allorders/getproductbydate/` + createddate )\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product id retrieved: ${createddate}`)),\r\n          catchError(this.handleError<Allorders[]>(`Get Song id=${createddate}`))\r\n          \r\n        );\r\n       \r\n    }\r\n  \r\n       \r\n\r\n\r\n\r\n\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n          // TODO: send the error to remote logging infrastructure\r\n          console.error(error);\r\n          // TODO: better job of transforming error for user consumption\r\n          console.log(`${operation} failed: ${error.message}`);\r\n          // Let the app keep running by returning an empty result.\r\n          return of(result as T);\r\n        };\r\n      }\r\n}","export class Onlyorders {\r\n\tconstructor(){\r\n\t\tthis._id='';\r\n\t\tthis.productname = '';\r\n\t\tthis.clientname = '';\r\n        this.category = '';\r\n\t\tthis.invoiceid = '';\r\n        this.clientprice = '';\r\n\t\tthis.advancereceived ='';\r\n\t\tthis.tobepaid ='';\r\n\t\tthis.extracol = '';\r\n        this.isactive = '';\r\n\t\tthis.location = '';\r\n\t\tthis.processdate ='';\r\n\t\tthis.expecteddate = '';\r\n        this.createddate = '';\r\n\t\tthis.lastupdated = '';\r\n\r\n\t}\r\n\tpublic _id;\r\n\tpublic productname;\r\n\tpublic clientname;\r\n    public category;\r\n\tpublic invoiceid;\r\n    public clientprice;\r\n\tpublic advancereceived;\r\n\tpublic tobepaid;\r\n\tpublic extracol;\r\n    public isactive;\r\n\tpublic location;\r\n\tpublic processdate;\r\n\tpublic expecteddate;\r\n    public createddate;\r\n\tpublic lastupdated;\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Usedproduct } from '../models/usedproduct.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UsedproductService {\r\n    constructor(private http: HttpClient) { }\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      };\r\n    \r\n      dataRow:any;\r\n    addusedproducts(addProduct: Usedproduct): Observable<any> {\r\n        return this.http.post<Usedproduct>(`${environment.apiUrl}usedproducts/addusedproduct`, addProduct, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Usedproduct>('Add Song'))\r\n          );\r\n      }\r\n\r\n      adddispatchproducts(dataRow: Usedproduct): Observable<any> {\r\n        return this.http.post<Usedproduct>(`${environment.apiUrl}usedproducts/addusedproduct`, dataRow, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Usedproduct>('Add Song'))\r\n          );\r\n      }\r\n\r\n\r\n    getAll() {\r\n        return this.http.get(`${environment.apiUrl}usedproducts/getusedproduct`);\r\n    }\r\n    updateUsedproduct(_id: string, value: any): Observable<Object> {\r\n      return this.http.put(`${environment.apiUrl}usedproducts/editusedproductbyid/${_id}`, value);\r\n    }\r\n\r\n  getUsedproductbyid(_id: string): Observable<any> {\r\n        return this.http.get(`${environment.apiUrl}usedproducts/getusedproductbyid/${_id}`);\r\n      }\r\n\r\n    deleteUser(_id: string): Observable<any> {\r\n      return this.http.delete(`${environment.apiUrl}usedproducts/deleteusedproductbyid/${_id}`, { responseType: 'text' });\r\n    }\r\n\r\n\r\n    getProductbydate(createddate :String) {\r\n      return this.http.get<Usedproduct[]>(`${environment.apiUrl}usedproducts/getproductbydate/` + createddate )\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product id retrieved: ${createddate}`)),\r\n          catchError(this.handleError<Usedproduct[]>(`Get Song id=${createddate}`))\r\n          \r\n        );\r\n       \r\n    }\r\n  \r\n       \r\n\r\n\r\n\r\n\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n          // TODO: send the error to remote logging infrastructure\r\n          console.error(error);\r\n          // TODO: better job of transforming error for user consumption\r\n          console.log(`${operation} failed: ${error.message}`);\r\n          // Let the app keep running by returning an empty result.\r\n          return of(result as T);\r\n        };\r\n      }\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { ProductService } from '../services/product.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../services/authentication.service';\n\n\n@Component({\n  selector: 'app-addproducts',\n  templateUrl: './addproducts.component.html',\n  styleUrls: ['./addproducts.component.css']\n})\nexport class AddproductsComponent implements OnInit {\n  addProduct: FormGroup;\n  ProductService: any;\n  myDate = new Date();\n  isLoggedIn$: Observable<boolean>;   \n    totalCount: number;\n\n\n  constructor(public dialogRef: MatDialogRef<AddproductsComponent>, private productService: ProductService, private router: Router,private authService: AuthenticationService,\n    public fb: FormBuilder, public datepipe: DatePipe) {\n    this.form()\n  }\n\n\n  ngOnInit() {\n    this.totalCount = 0;\n   }\n  \n\n  form() {\n    this.addProduct = this.fb.group({\n      productname: [''],\n      productcode: [''],\n      category: [''],\n      price: [''],\n      workshop1: [''],\n      workshop2: [''],\n      workshop3: [''],\n      totalavailable:[''],\n      createddate:  this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\n      lastupdated: ['']\n\n    })\n  }\n\n\n  addvalue(){\n    //this.totalCount = 20;\n    let product = this.addProduct;\n    let ws1 = this.addProduct.get('workshop1').value || 0;\n   // console.log(this.addProduct.get('workshop2').value);\n    let ws2 =  this.addProduct.get('workshop2').value || 0;\n    let ws3 =  this.addProduct.get('workshop3').value || 0;\n    this.totalCount = parseInt(ws1)+parseInt(ws2)+parseInt(ws3);\n    this.addProduct.controls[\"totalavailable\"].setValue(this.totalCount);\n    console.log(this.addProduct);\n  \n  }\n  \n  submit() {\n    if (!this.addProduct.valid) {\n      return false;\n    } else {\n      this.productService.addproducts(this.addProduct.value)\n        .subscribe((res) => {\n          console.log(res)\n          this.addProduct.reset();\n          this.actionFunction();\n       //  this.getaddproducts();\n         window.location.reload();\n        })\n    }\n  }\n\n//   getaddproducts()\n//   {\n//  // this.isLoggedIn$ = this.authService.loggedIn; \n//     this.router.navigate(['/products']);\n  \n//   }\n\n\n  actionFunction() {\n    alert(\"Product Added Successfully\");\n    this.closeModal();\n  }\n\n  closeModal() {\n    this.dialogRef.close();\n  }\n}\n","<div id=\"modal-content-wrapper\">\n    <form [formGroup]=\"addProduct\" (ngSubmit)=\"submit()\">\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <label for=\"productname\">Product Name</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"productname\" placeholder=\"Name\">\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"productcode\">Code</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"productcode\" placeholder=\"Code\">\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"category\">Category</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"category\" placeholder=\"category\">\n          </div>\n        </div>\n        \n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n          <label for=\"price\">Price</label>\n          <input type=\"number\" class=\"form-control\" formControlName=\"price\" placeholder=\"Price\">\n         </div>\n        \n          <div class=\"form-group col-md-6\">\n          <label for=\"totalavailable\">Total Available</label>\n          <input type=\"text\" disabled [(ngModel)]=\"totalCount\" class=\"form-control\" formControlName=\"totalavailable\" placeholder=\"Total Available\">\n        </div>\n        </div>\n\n        <div class=\"form-row\">  \n          <div class=\"form-group col-md-4\">\n            <label for=\"Workshop 1\">Location</label>\n            <input type=\"checkbox\" disabled class=\"custom-control-input\" id=\"Workshop 1\">\n            <select disabled id=\"Workshop 1\"  class=\"form-control\">\n              <option  selected>Workshop 1</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"workshop1\">Quantity</label>\n            <input type=\"number\" (input)=\"addvalue()\" class=\"form-control\" formControlName=\"workshop1\">\n          </div>\n          <!-- <div class=\"form-group col-md-4\">\n            <label for=\"inputZip\">Comments</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputZip\">\n          </div> -->\n        </div>\n\n\n        <div class=\"form-row\">\n          \n          <div class=\"form-group col-md-4\">\n            <label for=\"inputState\">Location</label>\n            <input type=\"checkbox\" multiple=\"multiple\" class=\"custom-control-input\" id=\"workshop2\">\n            <select disabled id=\"inputState\"  class=\"form-control\">\n            \n              <option selected>Workshop 2</option>\n        \n            </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"workshop2\">Quantity</label>\n            <input type=\"number\" (input)=\"addvalue()\" class=\"form-control\" formControlName=\"workshop2\">\n          </div>\n          <!-- <div class=\"form-group col-md-4\">\n            <label for=\"inputZip\">Comments</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputZip\">\n          </div> -->\n       \n      \n        </div>\n        <div class=\"form-row\">\n          \n          <div class=\"form-group col-md-4\">\n            <label for=\"inputState\">Location</label>\n            <input type=\"checkbox\" multiple=\"multiple\" class=\"custom-control-input\" id=\"workshop3\">\n            <select disabled id=\"inputState\"  class=\"form-control\">\n            \n              <option selected>workshop 3</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"workshop3\">Quantity</label>\n            <input type=\"number\" (input)=\"addvalue()\" class=\"form-control\" formControlName=\"workshop3\">\n          </div>\n          <!-- <div class=\"form-group col-md-4\">\n            <label for=\"inputZip\">Comments</label>\n            <input type=\"text\" class=\"form-control\" id=\"inputZip\">\n          </div> -->\n       \n      \n        </div>\n       \n      </form>\n   \n    <footer id=\"modal-footer\">\n      <button mat-raised-button   id=\"modal-cancel-button\" style='margin-right:16px' (click)=\"closeModal()\">Cancel</button>\n      <button mat-raised-button   id=\"modal-action-button\" style='margin-right:16px' (click)=\"submit()\">Save</button>\n      \n  </footer>\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from './services/authentication.service';\nimport { User } from './models/user.model';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  user: User;\n  title = 'aep';\n\n  user1: any;\n\n  //xtrue: Observable<boolean>;\n\n  constructor(private authService: AuthenticationService, private router: Router) {\n  \n   this.authService.user.subscribe(xtrue =>{\n\n    this.user1= xtrue;\n    console.log(this.user1,\"ggg\")\n    if ( !this.user1 || (this.user1 && !this.user1.success))\n    {\n    //this.router.navigate(['/login']);\n    localStorage.removeItem('candidate');\n    }\n   })\n\n     // this.user1= JSON.parse(window.localStorage.getItem('candidate')); \n      // console.log(Object.assign({},this.user1[\"success\"]))\n    console.log(JSON.parse(window.localStorage.getItem('candidate')));\n  }\n  \n\n\n\n  ngOnInit() {\n    // this.xtrue$ = this.authService.isLoggedIn; \n  }\n\n\n\n  // onLogout() {\n\n  //   this.sidenavClose.emit();\n  //   window.location.reload();\n  //   this.authService.logout();\n  //   // this.router.navigate(['/login']);  \n  //   localStorage.removeItem('candidate');\n  // }\n\n\n\n  @Output() sidenavClose = new EventEmitter();\n\n  onSidenavClose = () => {\n    this.sidenavClose.emit();\n  }\n}\n\n\n","<router-outlet></router-outlet>\n\n<mat-sidenav-container fullscreen  *ngIf=\"user1?.success\">\n  <!-- <mat-sidenav *ngIf=\"isLoggedIn$ | async as isLoggedIn \"  mode=\"side\" #sidenav opened position=\"close\">\n      Menu\n  </mat-sidenav> -->\n\n  <mat-sidenav #sidenav role=\"navigation\"  >\n    <app-sidenav-list (sidenavClose)=\"sidenav.close()\"></app-sidenav-list>\n  </mat-sidenav>\n\n  <mat-sidenav-content>\n    <mat-toolbar style=\"background-color: white;\" >\n     \n      <button mat-raised-button (click)=\"sidenav.toggle()\" >\n        <mat-icon>menu</mat-icon>\n      </button>\n      <!-- <h1 style=\"margin-left: 200px;font-family: cursive, sans-serif;color: tomato;\">Annapurna Engineer's</h1> -->\n    </mat-toolbar>\n    <!-- <div class=\"main-content\">\n        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\n      </div> -->\n    <main>\n      <router-outlet>\n\n      </router-outlet>\n    </main>\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { AllordersService } from '../services/allorders.service';\nimport { ProductService } from '../services/product.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { FormControl } from '@angular/forms';\n\n\n\n\n@Component({\n  selector: 'app-addallorders',\n  templateUrl: './addallorders.component.html',\n  styleUrls: ['./addallorders.component.css']\n})\nexport class AddallordersComponent implements OnInit {\n  category1: any;\n\n  addAllorders: FormGroup;\n  AllordersService: any;\n  ProductService:any;\n  myDate = new Date();\n  isLoggedIn$: Observable<boolean>;   \n  totalCount: number;\n  category: any;\n  selectedUser ;\n  productname1: any;\n  expecteddate : any;\n  minDate = new Date();\n  @Output() emitValue: EventEmitter<string> = new EventEmitter<string>();\n  category2: any;\n \n  constructor(public dialogRef: MatDialogRef<AddallordersComponent>,private productService : ProductService, private allordersService: AllordersService, private router: Router,private authService: AuthenticationService,\n    public fb: FormBuilder, public datepipe: DatePipe) {\n    this.form()\n  }\n\n  ngOnInit(){\n\n    //this.getcategory1();\n    this.getcategory();\n    \n  }\n\n  inputEvent(event){\n    let expecteddate = this.datepipe.transform(new Date(event.target.value), 'yyyy-MM-dd');\n     console.log(expecteddate);\n     this.addAllorders.controls.expecteddate.setValue(expecteddate);\n  \n   }\n\n\n  public ss(expecteddate)\n  \n   {\n   this.expecteddate;\n   console.log(expecteddate)\n  \n   }\n  \n\n  form() {\n    this.addAllorders = this.fb.group({\n      productname: [''],\n      category:  [''],\n      clientname:  [''],\n      clientprice: [''],\n      invoiceid: [''],\n      location : [''],\n      extracol: ['Pending'],\n      advancereceived :[''],\n \t    tobepaid :[''],\n      isactive: 'false',\n      quantity: [''],\n      createddate:  this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\n      expecteddate:  this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\n      lastupdated: ['']\n\n    })\n  }\n\n  addvalue(){\n    //this.totalCount = 20;\n    let product = this.addAllorders;\n    let ws1 = this.addAllorders.get('clientprice').value || 0;\n   // console.log(this.addProduct.get('workshop2').value);\n    let ws2 =  this.addAllorders.get('advancereceived').value || 0;\n   \n    this.totalCount = parseInt(ws1)-parseInt(ws2);\n    this.addAllorders.controls[\"tobepaid\"].setValue(this.totalCount);\n    console.log(this.addAllorders);\n  \n  }\n  \n\n\n  submit() {\n    if (!this.addAllorders.valid) {\n      return false;\n    } else {\n      console.log(this.addAllorders.value)\n      this.allordersService.addallorders(this.addAllorders.value)   \n        .subscribe((res) => {\n          console.log(res)\n          this.addAllorders.reset();\n       this.actionFunction();\n         //this.getaddproducts();\n         window.location.reload();\n        })\n    }\n  }\n\n\n\n  // getcategory(){\n  //   this.productService.getcategory().subscribe((result) => {  \n  //    this.category1 = result;\n  //   //this.category2= this.category1._id ;\n  //   //return this.category.find(x => x._id === this.category);\n  //   console.log(this.category1);\n  //     console.log(this.category2);\n   \n  //   }, error => console.log(error));\n\n  // } \n\n\ngetcategory()\n{\nthis.productService.getcategoryonly().subscribe((result) => { \nthis.category2 = result;\nconsole.log(this.category2);\n\n   })\n}\n\n  changedvalue1(v){\n   // this.emitValue.emit(this.selectedUser);\n    //console.log(this.selectedUser)\n    console.log(v);\n    this.productService.getProductbycategory(v.target.value).subscribe((result) => { \n      this.productname1 = result;\n   \n      console.log(result);\n   \n    }, error => console.log(error));\n\n\n  }\n\n//   getaddproducts()\n//   {\n//  // this.isLoggedIn$ = this.authService.loggedIn; \n//     this.router.navigate(['/products']);\n  \n//   }\n\n\n  actionFunction() {\n    alert(\"Product Added Successfully\");\n    this.closeModal();\n  }\n\n  closeModal() {\n    this.dialogRef.close();\n  }\n\n\n\n}\n","\n<div id=\"modal-content-wrapper\">\n    <form [formGroup]=\"addAllorders\" name=\"add\" (ngSubmit)=\"submit()\">\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <label for=\"invoiceid\">Invoice No</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"invoiceid\" placeholder=\"Enter Invoice No.\" required >\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"category\">Category</label>\n            <!-- <input type=\"text\" class=\"form-control\"  class=\"custom-control-input\" placeholder=\"category\"> -->\n            <!-- <input type=\"category\"  class=\"custom-control-input\" id=\"category\"  placeholder=\"category\">\n            <select id=\"category\"  formControlName=\"category\" (change)=\"changedvalue1($event)\" class=\"form-control\">\n                <option [ngValue]=\"null\" selected disabled>Select Category</option>\n                <option *ngFor=\"let cat of category1\"  [ngValue]=\"category\" >\n                    {{cat.category}}\n             </option>\n            </select> -->\n           \n            <select formControlName=\"category\" class=\"form-control\" (change)=\"changedvalue1($event)\" required >\n                <option value=\"\" disabled selected>Select Category</option>\n                <!-- <option>Choose Category</option> -->\n                <option *ngFor=\"let cat of category2\">{{cat}}</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"productname\">Item</label>\n            <select formControlName=\"productname\" class=\"form-control\" required  >\n                <option value=\"\" disabled selected>Select Product</option>\n                <!-- <option >Choose Product</option> -->\n                <option *ngFor=\"let product of productname1\">{{product.productname}}</option>\n            </select>\n          </div>\n        </div>\n        \n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n          <label for=\"clientname\">Client Name</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"clientname\" placeholder=\"Enter Client Name\" required >\n         </div>\n        \n          <div class=\"form-group col-md-6\">\n          <label for=\"clientprice\">Client Price</label>\n          <input type=\"number\"  class=\"form-control\" (input)=\"addvalue()\" formControlName=\"clientprice\" placeholder=\"Total Bill Price\" required >\n        </div>\n       \n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"advancereceived\">Advance Received</label>\n            <input type=\"number\"  class=\"form-control\" (input)=\"addvalue()\" formControlName=\"advancereceived\" placeholder=\"Enter Advance Amount\" required>\n          </div>\n          <div class=\"form-group col-md-6\">\n            <label for=\"tobepaid\">Balance Amount</label>\n            <input type=\"number\"  class=\"form-control\" disabled [(ngModel)]=\"totalCount\" formControlName=\"tobepaid\" required >\n          </div>\n        </div>\n\n        <div class=\"form-row\">  \n          <div class=\"form-group col-md-4\">\n            <label for=\"location\">Location</label>\n            <!-- <input type=\"location\"  class=\"custom-control-input\" id=\"location\"> -->\n            <select  class=\"form-control\" formControlName=\"location\" required>\n                <option value=\"\" disabled selected>Select Workshop</option>\n                <!-- <option disabled>Choose Workshop</option> -->\n              <option  selected>Workshop 1</option>\n              <option  selected>Workshop 2</option>\n              <option  selected>Workshop 3</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"quantity\">Quantity</label>\n            <input type=\"number\" class=\"form-control\" formControlName=\"quantity\" placeholder=\"Enter Quantity\" required>\n          </div>\n     <div class =\"form-group col-md4\">\n        <mat-form-field>\n            <label for=\"expecteddate\">Expected Date</label>\n            <input (dateInput)=\"inputEvent($event)\"  matInput [matDatepicker]=\"myPicker\"  formControlName=\"expecteddate\"  [min]=\"minDate\" value =\"{{expecteddate | date :'yyyy-MM-dd'}}\" required  >\n            <mat-datepicker-toggle  matSuffix [for]=\"myPicker\"></mat-datepicker-toggle> \n            <mat-datepicker #myPicker></mat-datepicker>\n        </mat-form-field>\n\n     </div>\n        </div>\n\n\n       \n      </form>\n   \n    <footer id=\"modal-footer\">\n      <button mat-raised-button   id=\"modal-cancel-button\" style='margin-right:16px' (click)=\"closeModal()\">Cancel</button>\n      <button mat-raised-button [disabled]=\"addAllorders.controls['invoiceid' || 'productname' || 'category' ||'clientname' || 'clientprice' || 'expecteddate'].invalid\"  id=\"modal-action-button\" style='margin-right:16px' (click)=\"submit()\">Save</button>\n      \n  </footer>\n</div>","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n\n  orderscountsubject = new Subject();\n  orderscountasobserv = this.orderscountsubject.asObservable();\n  constructor() { }\n\n\nsetorderscount(data)\n{\n  this.orderscountsubject.next(data)\n}\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n\tconstructor(private http: HttpClient){\r\n\r\n\t}\r\n\t\r\n\tvalidateLogin(user: User){\r\n\t\treturn this.http.post('http://aapi-env.eba-jwp2b8qx.ap-south-1.elasticbeanstalk.com/users/login',{\r\n\t\t\temail : user.email,\r\n\t\t\tpassword : user.password,\r\n\t\t\ttoken :user.token\r\n\t\t})\r\n\t}\r\n\r\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n//import { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'; \nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProductsComponent} from './products/products.component';\nimport { ProductsusedComponent} from './productsused/productsused.component';\nimport{ EditproductsComponent } from './editproducts/editproducts.component';\nimport {AddproductsComponent } from './addproducts/addproducts.component';\nimport {DispatchComponent } from './dispatch/dispatch.component';\nimport {AddusedproductComponent} from './addusedproduct/addusedproduct.component';\nimport {AddclientpriceComponent} from './addclientprice/addclientprice.component';\nimport {AddallordersComponent} from './addallorders/addallorders.component';\nimport {EditallordersComponent} from './editallorders/editallorders.component';\nimport {AllordersComponent} from './allorders/allorders.component';\nimport {OnlyordersComponent} from './onlyorders/onlyorders.component';\nimport {OnlycompletedComponent} from './onlycompleted/onlycompleted.component';\nimport {EditusedproductComponent} from './editusedproduct/editusedproduct.component';\nimport {NotfoundComponent} from './notfound/notfound.component';\nimport {PurchaseproductComponent} from './purchaseproduct/purchaseproduct.component';\nimport {AddpurchaseproductComponent} from './addpurchaseproduct/addpurchaseproduct.component';\nimport {EditpurchaseproductComponent} from './editpurchaseproduct/editpurchaseproduct.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// import { MatToolbarModule,MatSidenavModule,MatButtonModule,MatIconModule,MatDividerModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatTableModule} from '@angular/material/table'\nimport { SidenavListComponent } from './navigation/sidenav-list/sidenav-list.component';\nimport { CustomMaterialModule } from './material.module';\nimport { AuthGuardGuard as AuthGuard  } from './auth-guard.guard';\nimport { AuthenticationService } from './services/authentication.service';\nimport {ReactiveFormsModule  } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {DatePipe} from '@angular/common';  \nimport { MatSortModule } from '@angular/material/sort'; \nimport { ProductService } from './services/product.service';\nimport { MatDatepickerModule } from '@angular/material/datepicker'; \nimport {MatNativeDateModule} from '@angular/material/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'; \nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { MatMenuModule } from '@angular/material/menu';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {SubjectService} from './services/subjectservice.service';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Role } from './models/role.model';\n\n\n\n\n\n\n// const APPROUTES: RouterModule = [\n//   {path: 'products', component: ProductsComponent , data: { requiresLogin: true }},\n//   {path: '', component: LoginComponent},\n//   {path: 'productsused', component: ProductsusedComponent},\n//   {path: 'dispatch', component: DispatchComponent},\n//  // {path: '**', component: NotFoundComponent}\n// ];\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ProductsComponent,\n    SidenavListComponent,\n    ProductsusedComponent,\n    EditproductsComponent,\n    AddproductsComponent,\n    DispatchComponent,\n   HomeComponent,\n   AddusedproductComponent,\n   AddclientpriceComponent,\n   AddallordersComponent,\n   EditallordersComponent,\n   AllordersComponent,\n   OnlyordersComponent,\n   OnlycompletedComponent,\n   EditusedproductComponent,\n   NotfoundComponent,\n   PurchaseproductComponent,\n   AddpurchaseproductComponent,\n   EditpurchaseproductComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    CustomMaterialModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDividerModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatCardModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatSortModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    NgxSpinnerModule,\n    MatMenuModule,\n    MatTooltipModule,\n    RouterModule.forRoot([\n      // { path: 'login', component: LoginComponent },\n      // { path: 'products', component:ProductsComponent },\n      // { path: 'productsused', component:ProductsusedComponent },\n      // { path: 'dispatch', component:DispatchComponent }  \n    // {  path: '',\n     \n    //   component: LoginComponent,\n    //   children: [\n    //     {\n    //       path: '',\n    //       redirectTo: 'login',\n    //       pathMatch: 'full'\n    //     },\n    //     {\n    //       path: 'login ',\n    //       component: LoginComponent\n    //     },\n    //    ] },\n        \n           \n             { path: 'login', component: LoginComponent },\n             { path: '', redirectTo:'/login', pathMatch: 'full' ,},\n             { path: 'dashboard', component: HomeComponent,  canActivate: [AuthGuard] , data: { role: [Role.Admin] } },\n             { path: 'products', component: ProductsComponent,  canActivate: [AuthGuard]},\n            //  { path: 'product/:_id', component: EditproductsComponent },\n             { path: 'productsused', component: ProductsusedComponent,canActivate: [AuthGuard]},\n             { path: 'addclientprice', component: AddclientpriceComponent ,canActivate: [AuthGuard]},          \n             { path: 'addusedproduct', component: AddusedproductComponent , canActivate: [AuthGuard]},\n             { path: 'addallorders', component: AddallordersComponent ,canActivate: [AuthGuard]},  \n             { path: 'editallorders', component: EditallordersComponent ,canActivate: [AuthGuard]},  \n             { path: 'allorders', component: AllordersComponent ,canActivate: [AuthGuard]},  \n             { path: 'dispatch', component: DispatchComponent ,canActivate: [AuthGuard]},\n             { path: 'onlyorders', component: OnlyordersComponent ,canActivate: [AuthGuard]},\n             { path: 'onlycompleted', component: OnlycompletedComponent ,canActivate: [AuthGuard]},\n             { path: 'editusedproduct', component: EditusedproductComponent , canActivate: [AuthGuard]},\n             { path: 'purchaseproduct', component: PurchaseproductComponent ,canActivate: [AuthGuard]},\n             { path: 'addpurchaseproduct', component: AddpurchaseproductComponent ,canActivate: [AuthGuard]},\n             { path: 'editpurchaseproduct', component: EditpurchaseproductComponent , canActivate: [AuthGuard]},\n             { path: 'notfound', component: NotfoundComponent },\n             { path: '**', redirectTo: '/dashboard'  },\n           \n              \n    ]),\n  ],\n\n\n  providers: [AuthenticationService, AuthGuard,DatePipe,ProductService,SubjectService,  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { \n\n  MatSidenavModule;\n  MatTableModule;\n  MatDatepickerModule;\n}\n","export enum Role {\r\n    User = 'User',\r\n    Admin = 'Admin'\r\n  }","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { UsedproductService } from '../services/usedproduct.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Product } from '../models/product.model'\nimport { AuthenticationService } from '../services/authentication.service';\nimport { ProductService } from '../services/product.service';\nimport { renderFlagCheckIfStmt } from '@angular/compiler/src/render3/view/template';\n\n\n\n\n\n\n@Component({\n  selector: 'app-addusedproduct',\n  templateUrl: './addusedproduct.component.html',\n  styleUrls: ['./addusedproduct.component.css']\n})\nexport class AddusedproductComponent implements OnInit {\n\n  addProduct: FormGroup;\n  addProduct1: FormGroup;\n  ProductService: any;\n // myDate = new Date();\n  isLoggedIn$: Observable<boolean>;   \n  totalCount: number;\n  category: any;\n  category2: any;\n  productname1: any;\n  productcode2: any;\n  product= new Product();\n  Product = new Product();\nupdatedvales:any;\npushprovalue : any;\n\n    constructor(public dialogRef: MatDialogRef<AddusedproductComponent>,private datePipe: DatePipe, private productService : ProductService,private usedproductService: UsedproductService, private router: Router,private authService: AuthenticationService,\n      public fb: FormBuilder, public datepipe: DatePipe) {\n      this.form()\n    }\n  ngOnInit() {\n\n    this.getcategory();\n  }\n\n\n  form() {\n    this.addProduct = this.fb.group({\n      productname: [''],\n      productcode: [''],\n      category: [''],\n      enterworkshop1: [0],\n      enterworkshop2: [0],\n      enterworkshop3: [0],\n      balanceworkshop1: [''],\n      balanceworkshop2: [''],\n      balanceworkshop3: [''],\n      pushworkshop1: [''],\n      pushworkshop2: [''],\n      pushworkshop3: [''],\n     // createddate: new Date().toISOString()\n      createddate:  this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\n      lastupdate :[''],\n      pushtotal :['']\n\n    })\n  }\n\n  // form1() {\n  //   this.addProduct1 = this.fb.group({\n  //     productname: [''],\n  //     productcode: [''],\n  //     category: [''],\n  //     workshop1: [''],\n  //     workshop2: [''],\n  //     workshop3: [''],\n  //     totalavailable: [''],\n  //     lastupdated:  this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\n\n  //   })\n  // }\n\n  \n  submit() {\n    if (!this.addProduct.valid) {\n      return false;\n    } else {\n      console.log(this.addProduct.value)\n      this.usedproductService.addusedproducts(this.addProduct.value)\n        .subscribe((res) => {\n          console.log(res)\n          this.updatedvales=res;\n          this.actionFunction();\n          this.addProduct.reset();\n          \n       //  this.getaddproducts();\n        \n      \n        })\n    }\n  }\n\n  \ngetcategory()\n{\nthis.productService.getcategoryonly().subscribe((result) => { \nthis.category2 = result;\nconsole.log(this.category2);\n\n   })\n}\n\n  changedvalue1(v){\n   // this.emitValue.emit(this.selectedUser);\n    //console.log(this.selectedUser)\n    console.log(v);\n   \n    this.changedvalue2(v);\n    \n    this.productService.getProductbycategory(v.target.value).subscribe((result) => { \n\n      this.productname1 = result;\n    \n      console.log(result);\n    }, error => console.log(error));\n  \n  \n   \n   \n  }\n  \n  changedvalue2(v){\n    // this.emitValue.emit(this.selectedUser);\n     //console.log(this.selectedUser)\n     console.log(v,v.target.value);\n    \n     this.productService.getProductcodebyproduct(v.target.value).subscribe((result) => { \n       this.productcode2 = result;\n       this.pushprovalue=result;\n       console.log(this.productcode2); \n      this.addProduct.controls.productcode.setValue(this.productcode2.productcode);\n      this.addProduct.controls.balanceworkshop1.setValue(this.productcode2.workshop1);\n      this.addProduct.controls.balanceworkshop2.setValue(this.productcode2.workshop2);\n      this.addProduct.controls.balanceworkshop3.setValue(this.productcode2.workshop3);\n     }, error => console.log(error));\n   \n   }\n\n\n   addvalue(){\n    //this.totalCount = 20;\n    let product = this.addProduct.controls.productname1;\n    let ews1 = this.addProduct.controls.enterworkshop1.value || 0;\n let bws1 = this.addProduct.controls.balanceworkshop1.value || 0;\n   // console.log(this.addProduct.get('workshop2').value);\n    let ews2 =  this.addProduct.controls.enterworkshop2.value || 0;\n    let bws2 = this.addProduct.controls.balanceworkshop2.value || 0;\n    let ews3 =  this.addProduct.controls.enterworkshop3.value || 0;\n    let bws3 = this.addProduct.controls.balanceworkshop3.value || 0;\n    \n    let pw1= parseInt(bws1)-parseInt(ews1);\n    let pw2= parseInt(bws2)-parseInt(ews2);\n    let pw3= parseInt(bws3)-parseInt(ews3); \n  let p1= this.addProduct.controls.pushworkshop1.setValue(pw1);\n  let p2 =this.addProduct.controls.pushworkshop2.setValue(pw2);\n  let p3 =  this.addProduct.controls.pushworkshop3.setValue(pw3);\n    let total = pw1+pw2+pw3;\n    this.addProduct.controls.pushtotal.setValue(total);\n\n    console.log(this.addProduct);\n  \n  }\n  \n  \n  pushProduct(){\n  \n    console.log(this.updatedvales,this.pushprovalue)\n    console.log(this.product)\n\n    this.product._id =  this.pushprovalue._id;\n    this.product.productname =  this.pushprovalue.productname;\n    this.product.productcode =  this.pushprovalue.productcode;\n    this.product.price =  this.pushprovalue.price;\n    this.product.category =  this.pushprovalue.category;\n    this.product.comments =  this.pushprovalue.comments;\n    this.product.createddate =  this.pushprovalue.createddate;\n\n     this.product.workshop1 =  this.updatedvales.pushworkshop1;\n     this.product.workshop2 =  this.updatedvales.pushworkshop2;\n     this.product.workshop3 =  this.updatedvales.pushworkshop3;\n     this.product.totalavailable =  this.updatedvales.pushtotal;\n  this.product.lastupdated =  this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n  this.productService.updateUser2(this.updatedvales.productname,this.product)\n    .subscribe(data => {\n      console.log(data);\n      this.product = new Product();\n     \n    }, error => console.log(error));\n   \n    \n  }\n\n  // getaddproducts()\n  // {\n  // //this.isLoggedIn$ = this.authService.loggedIn; \n  //   this.router.navigate(['/productsused']);\n  \n  // }\n\n\n  actionFunction() {\n    alert(\"Stock Used Added Successfully\");\n    this.pushProduct()\n   window.location.reload();\n    this.closeModal();\n  }\n\n  closeModal() {\n    this.dialogRef.close();\n  }\n\n\n\n\n\n}\n","<div id=\"modal-content-wrapper\">\n    <form [formGroup]=\"addProduct\" (ngSubmit)=\"submit()\">\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-4\">\n            <label for=\"category\">Category</label>\n            <select formControlName=\"category\" class=\"form-control\" (change)=\"changedvalue1($event)\" required >\n              <option value=\"\" disabled selected>Select Category</option>\n              <!-- <option>Choose Category</option> -->\n              <option *ngFor=\"let cat of category2\">{{cat}}</option>\n          </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"category\">Item Name</label>\n            <select formControlName=\"productname\" class=\"form-control\" required (change)=\"changedvalue2($event)\" >\n              <option value=\"\" disabled selected>Select Product</option>\n              <!-- <option >Choose Product</option> -->\n              <option *ngFor=\"let product of productname1\">{{product.productname}}</option>\n          </select>\n          </div>\n          <div class=\"form-group col-md-4\">\n            <label for=\"productcode\">Code</label>\n            <input type=\"text\" class=\"form-control\" disabled formControlName=\"productcode\" placeholder=\"Code\">\n          </div>\n        </div>\n        \n     \n\n        <div class=\"form-row\">  \n          <div class=\"form-group col-md-3\">\n            <label for=\"Workshop 1\">Location</label>\n            <input type=\"checkbox\" disabled class=\"custom-control-input\" id=\"Workshop 1\">\n            <select disabled id=\"Workshop 1\"  class=\"form-control\">\n              <option  selected>Workshop 1</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-3\">\n            <label for=\"enterworkshop1\">Quantity Used</label>\n            <input type=\"number\" (input)=\"addvalue()\"  class=\"form-control\" formControlName=\"enterworkshop1\">\n          </div>\n          <div class=\"form-group col-md-3\">\n            <label for=\"balanceworkshop1\">Total Available</label>\n            <input type=\"number\" disabled class=\"form-control\" formControlName=\"balanceworkshop1\">\n          </div>\n          <div class=\"form-group col-md-3\">\n            <label for=\"pushworkshop1\">Remaining Available</label>\n            <input type=\"text\" disabled class=\"form-control\" formControlName=\"pushworkshop1\">\n          </div>\n        </div>\n\n\n        <div class=\"form-row\">\n          \n          <div class=\"form-group col-md-3\">\n            <label for=\"inputState\">Location</label>\n            <input type=\"checkbox\" multiple=\"multiple\" class=\"custom-control-input\" id=\"workshop2\">\n            <select disabled id=\"inputState\"  class=\"form-control\">\n            \n              <option selected>Workshop 2</option>\n        \n            </select>\n          </div>\n          <div class=\"form-group col-md-3\">\n            <label for=\"enterworkshop2\">Quantity Used</label>\n            <input type=\"number\" (input)=\"addvalue()\"  class=\"form-control\" formControlName=\"enterworkshop2\">\n          </div>\n          <div class=\"form-group col-md-3\">\n            <label for=\"balanceworkshop2\">Total Available</label>\n            <input type=\"number\" disabled class=\"form-control\" formControlName=\"balanceworkshop2\">\n          </div>\n          <div class=\"form-group col-md-3\">\n            <label for=\"pushworkshop2\">Remaining Available</label>\n            <input type=\"text\" disabled class=\"form-control\" formControlName=\"pushworkshop2\">\n          </div>\n       \n      \n        </div>\n        <div class=\"form-row\">\n          \n          <div class=\"form-group col-md-3\">\n            <label for=\"inputState\">Location</label>\n            <input type=\"checkbox\" multiple=\"multiple\" class=\"custom-control-input\" id=\"workshop3\">\n            <select disabled id=\"inputState\"  class=\"form-control\">\n            \n              <option selected>workshop 3</option>\n            </select>\n          </div>\n          <div class=\"form-group col-md-3\">\n            <label for=\"enterworkshop3\">Quantity Used</label>\n            <input type=\"number\" (input)=\"addvalue()\"  class=\"form-control\" formControlName=\"enterworkshop3\">\n          </div>\n          <div class=\"form-group col-md-3\">\n            <label for=\"balanceworkshop3\">Total Available</label>\n            <input type=\"text\" disabled class=\"form-control\" formControlName=\"balanceworkshop3\">\n          </div>\n          <div class=\"form-group col-md-3\">\n            <label for=\"pushworkshop3\">Remaining Available</label>\n            <input type=\"text\" disabled class=\"form-control\" formControlName=\"pushworkshop3\">\n          </div>\n       \n      \n        </div>\n        <div class=\"form-row\">\n          <div class=\"form-group col-md-6\">\n            <label for=\"pushtotal\">Total Remaining Available</label>\n            <input type=\"text\" disabled class=\"form-control\" formControlName=\"pushtotal\">\n          </div>\n        </div>\n      </form>\n   \n    <footer id=\"modal-footer\">\n      <button mat-raised-button   id=\"modal-cancel-button\" style='margin-right:16px' (click)=\"closeModal()\">Cancel</button>\n      <button mat-raised-button   id=\"modal-action-button\" style='margin-right:16px' (click)=\"submit()\">Save</button>\n      \n  </footer>\n</div>","export class Purchaseproduct {\r\n\tconstructor(){\r\n\t\tthis._id='';\r\n\t\tthis.productname = '';\r\n\t\tthis.productcode = '';\r\n        this.category = '';\r\n\t\tthis.sellername = '';\r\n        this.sellerprice = '';\r\n\t\tthis.purchaseorder = '';\r\n        this.purchasedate = '';\r\n\t\tthis.quantitypurchased ='';\r\n\t\tthis.comments = '';\r\n        this.createddate = '';\r\n\t\tthis.lastupdated = '';\r\n\r\n\t}\r\n\tpublic _id;\r\n\tpublic productname;\r\n\tpublic productcode;\r\n    public category;\r\n\tpublic sellername;\r\n    public sellerprice;\r\n\tpublic purchaseorder;\r\n    public purchasedate;\r\n\tpublic quantitypurchased;\r\n\tpublic comments;\r\n    public createddate;\r\n\tpublic lastupdated;\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject  , Observable} from 'rxjs';\r\n//import {  of } from 'rxjs/add/observable/of';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from '../models/user.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { normalizeGenFileSuffix } from '@angular/compiler/src/aot/util';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\n\r\nexport class AuthenticationService {\r\n  \r\n  private userSubject: BehaviorSubject<any>;\r\n  public user: Observable<any>;\r\n  xuser: any;\r\n  public currentUser: Observable<User>;\r\n  \r\n  constructor( private router: Router ,  private http: HttpClient)  {\r\n   this.xuser =JSON.parse(window.localStorage.getItem('candidate'));\r\n   if(this.xuser)\r\n   {\r\n    this.userSubject = new BehaviorSubject(this.xuser);\r\n   }\r\n   else{\r\n    this.userSubject = new BehaviorSubject(null);\r\n   }\r\n    this.user = this.userSubject.asObservable();\r\n}\r\npublic get userValue() {\r\n  return this.userSubject.value;\r\n}\r\n\r\n\r\n\r\n   \r\n  // get isLoggedIn()\r\n  //  {\r\n  //   localStorage.getItem('Token');\r\n  //  // window.localStorage.getItem('Token'); \r\n  //   sessionStorage.getItem('Token');\r\n  //   return this.loggedIn.asObservable();\r\n  // }\r\n\r\n\r\n  login(email: string, password: string) {\r\n    return this.http.post<any>(`${environment.apiUrl}users/login`, { email, password })\r\n        .pipe(map(user => {\r\n           \r\n            console.log(user);\r\n          //  localStorage.removeItem('candidate');\r\n          this.userSubject.next(user);\r\n            localStorage.setItem(\"candidate\", JSON.stringify(user));\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n            \r\n           \r\n           console.log(user)\r\n            return user;\r\n        }));\r\n}\r\n\r\n\r\nlogout() {\r\n  \r\nlet user2 = JSON.parse(localStorage.getItem('candidate'));\r\nuser2.success=false;\r\nthis.userSubject.next(user2);\r\nthis.userSubject = null;\r\nthis.router.navigate(['/login']);  \r\nwindow.location.reload();\r\nlocalStorage.removeItem('candidate');\r\nlocalStorage.removeItem('currentUser');\r\n \r\n}\r\n\r\n// isLoggedIn() {\r\n//   if (this.userSubject == null) {\r\n//     return false;\r\n//   } else {\r\n//     return true;\r\n//   }\r\n// }\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n","import { Component, EventEmitter, Inject, OnInit, Optional, Output, ViewChild ,Pipe, PipeTransform} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatSort } from '@angular/material/sort'\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport {OnlydispatchService} from '../services/onlydispatch.service';\nimport { OnlyordersService } from '../services/onlyorders.service';\nimport { AllordersService } from '../services/allorders.service';\nimport { DatePipe } from '@angular/common';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport * as XLSX from 'xlsx';\nimport { Onlyorders } from '../models/onlyorders.model';\nimport { Allorders } from '../models/allorders.model';\n\n\n\n@Component({\n  selector: 'app-onlyorders',\n  templateUrl: './onlyorders.component.html',\n  styleUrls: ['./onlyorders.component.css']\n})\nexport class OnlyordersComponent implements OnInit {\n  displayedColumns: string[] = ['sno','invoiceid','extracol','productname','category','quantity','clientname','location','processdate','createddate','expecteddate','actions'];\n  \n  display = 'none';\n  patientdatasource: any;\n  //patientdatasource = new MatTableDataSource(  ); \n private _id :string;\n  route: any;\n  productname : string;\n  onlyorders: Onlyorders;\n  Onlyorders = new Onlyorders();\n  allorders: Allorders;\n  Allorders = new Allorders();\n  public isactive : boolean ;\n  \n  \n  constructor(public matDialog: MatDialog,   private allordersService: AllordersService,private OnlydispatchService: OnlydispatchService, private OnlyordersService: OnlyordersService, private router: Router,private datePipe: DatePipe,    private spinner: NgxSpinnerService) { }\n  @ViewChild('scheduledOrdersPaginator') paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n \n  @Output() actionFunction = new EventEmitter();\n\n  loading() {\n    this.spinner.show();\n  \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.inputEvent1();\n      this.spinner.hide();\n    }, 5000);\n  };\n\n  ngOnInit() \n  {\n    this.loading();  \n    //this.inputEvent1();\n  }\n\n  refresh(){\n    this.spinner.show();\n    setTimeout(() => {\n      this.data();\n      this.spinner.hide();\n    }, 3000);\n    \n  }\n\n  data()\n{\n  this.OnlyordersService.getAll().subscribe((result) => { \n    this.patientdatasource = result;\n    console.log(this.patientdatasource);\n    this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n    this.patientdatasource.paginator = this.paginator;\n    this.patientdatasource.sort = this.sort;\n   \n\n  })\n}\n\n\npublic doFilter = (value: string) => {\n  this.patientdatasource.filter = value.trim().toLocaleLowerCase();\n}\n\n\ndeleteUser(_id: string,invoiceid:string) {\n  if(confirm(\"Are you sure to delete \"+ invoiceid))\n   {\n  this.OnlyordersService.deleteUser(_id)\n    .subscribe(\n      data => {\n        console.log(data);\n      }, \n      error => console.log(error));\n      window.location.reload();\n} }\n\nExportTOExcel()\n{\n  console.log(\"export\");\n  const workSheet = XLSX.utils.json_to_sheet(this.patientdatasource.data, {header:[]});\n  // delete (workSheet['01'])\n  workSheet['!cols'] = [];\n  workSheet['!cols'][0] = { hidden: true };  \n  // workSheet['!cols'][8] = { hidden: true };  \n  // workSheet['!cols'][12] = { hidden: true };  \n  const workBook: XLSX.WorkBook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\n  \n  XLSX.writeFile(workBook,  new Date().toDateString() + ' DailyProduction .xlsx');\n\n}\n\npublic  changeisactive(val : any,row){\n  if(confirm(\"Sending To Dispatch \")) {\n  console.log(val);\n // this.dataRow = row;\n row.isactive=false;\n row.dispatchdate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n this.loading();\n// this.dataRow.createddate = this.datePipe.transform(row.value, 'yyyy-MM-dd');\n this.OnlydispatchService.adddispatchproducts(row)\n        .subscribe((res) => {\n      //    console.log(res)\n         // this.addProduct.reset();\n         // this.actionFunction();\n        // this.getaddproducts();   \n       })\n   this.changeisactive1(val,row);\n   this.changeisactive2(val,row);\n }\n}\n\nchangeisactive1(val, row)\n{ \n row.isactive=true;\n row.extracol=\"Done\";\n// console.log(_id);\n// console.log(row);\n  this.OnlyordersService.updateUser1(val, row)\n  .subscribe((res) => {\n    row = new Onlyorders();\n    console.log(res)\n  })\n\n}\nchangeisactive2(val, row)\n{\n row.extracol=\"Ready To Dispatch\";\n// console.log(_id);\n// console.log(row);\n  this.allordersService.updateUser1(val, row)\n  .subscribe((res) => {\n    row = new Allorders();\n    console.log(res)\n  })\n\n}\n\n\ninputEvent(event){\n\n  let processdate = this.datePipe.transform(event.value, 'yyyy-MM-dd');\n   console.log(processdate);\n  this.OnlyordersService.getProductbydate(processdate)\n     .subscribe(data => {\n       console.log(data);\n       this.patientdatasource = data;\n       this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n       //this.gotoList();\n     }, error => console.log(error));\n  console.log(Date);\n\n }\n inputEvent1(){\n\n  let processdate =  this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n   console.log(processdate);\n  this.OnlyordersService.getProductbydate(processdate)\n     .subscribe(data => {\n       console.log(data);\n       this.patientdatasource = data;\n       this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n       //this.gotoList();\n     }, error => console.log(error));\n  console.log(Date);\n \n }\n\n modelChanged(date) {\n  var theDate = new Date(Date.parse(date));\n  const localDate = theDate.toLocaleString().split(\" \");\n\n  console.log(localDate);\n}\n\nchangeEvent(event){\n  // Return date object\n  console.log(event.value);\n}\n\n\n\n\n\n}\n","<div class=\"form-row parent\">\n  <div class=\"col-md-4\" fxFlex=\"40%\">\n    <mat-form-field style=\"text-align:center;text-decoration: black;\">\n      <input matInput type=\"text\" style=\"color:purple;\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Filter\">\n    </mat-form-field>\n  </div>\n  <div class=\"col-md-4\">\n    <mat-form-field>\n      <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\"\n        (ngModelChange)=\"modelChanged($event.target.value)\" (dateInput)=\"inputEvent($event)\"\n        (dateChange)=\"changeEvent($event)\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <!-- <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n      <mat-label>Choose a date</mat-label>\n      <input matInput [matDatepicker]=\"picker\"  (ngModelChange)=\"modelChanged($event)\"/>\n      <mat-datepicker-toggle matSuffix  [for]=\"picker\" ></mat-datepicker-toggle>\n      <mat-datepicker touchUi #picker color=\"primary\"></mat-datepicker>\n    </mat-form-field> -->\n  </div>\n\n\n  <div>\n    <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"refresh()\">\n      <mat-icon>cached</mat-icon>\n    </button>\n    &nbsp;&nbsp;&nbsp;\n    <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"ExportTOExcel()\">\n      <mat-icon style=\"margin-right: 10px;\">get_app</mat-icon>Export\n    </button>\n  </div>\n\n\n</div>\n\n\n<div class=\" test mat-elevation-z9\">\n\n\n  <mat-table class=\"lessons-table mat-elevation-z8\" [dataSource]=\"patientdatasource\" matSort matSortStart=\"desc\">\n    <ng-container matColumnDef=\"sno\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>S.No</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson;let i = index\">{{ i + 1 }}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"invoiceid\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Invoice No</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\">{{lesson.invoiceid}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"extracol\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\">{{lesson.extracol}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"productname\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Item</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\">{{lesson.productname}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"category\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Category</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\">{{lesson.category}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"quantity\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Quantity</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\">{{lesson.quantity}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"clientname\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Client Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\">{{lesson.clientname}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"location\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Location</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\">{{lesson.location}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"processdate\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Process Start Date</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\">{{lesson.processdate | date:'mediumDate'}}</mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"createddate\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header> Order Date</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\">{{lesson.createddate | date:'mediumDate'}}</mat-cell>\n\n    </ng-container>\n    <ng-container matColumnDef=\"expecteddate\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Delivery Date</mat-header-cell>\n      <mat-cell *matCellDef=\"let lesson\" [ngClass]=\"'w-75'\">{{lesson.expecteddate | date:'mediumDate'}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"actions\">\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\n      <td mat-cell *matCellDef=\"let lesson\">\n        <!-- <button mat-button >Edit</button> -->\n        <button mat-icon-button color=\"warn\"  matTooltip=\"Send To Dispatch\" matTooltipPosition=\"above\" (click)=\"changeisactive(lesson._id,lesson)\" [disabled]=\"lesson.isactive\">\n          <mat-icon>swap_horiz</mat-icon>\n        </button>\n        <button mat-icon-button color=\"warn\"  matTooltip=\"Delete Order\" matTooltipPosition=\"above\" (click)=\"deleteUser(lesson._id,lesson.productname)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n\n      </td>\n\n    </ng-container>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns\"></mat-row>\n\n  </mat-table>\n  <mat-paginator #scheduledOrdersPaginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n\n  <!-- <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"setPageSizeOptions($event)\">\n  </mat-paginator> -->\n\n  <ngx-spinner bdColor=\"rgba(0, 0, 0, 0.8)\" size=\"medium\" color=\"#1863c5\" type=\"square-jelly-box\" [fullScreen]=\"true\">\n    <p style=\"color: white\"> Loading... </p>\n  </ngx-spinner>\n</div>","import { Component, EventEmitter, Inject, OnInit, Optional, Output, ViewChild ,Pipe, PipeTransform} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatSort } from '@angular/material/sort'\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AllordersService } from '../services/allorders.service';\nimport { OnlyordersService } from '../services/onlyorders.service';\nimport {OnlydispatchService} from '../services/onlydispatch.service';\nimport { OnlycompletedService } from '../services/onlycompleted.service';\nimport { DatePipe } from '@angular/common';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport * as XLSX from 'xlsx';\nimport { Onlyorders } from '../models/onlyorders.model';\nimport { Allorders } from '../models/allorders.model';\nimport{ Onlydispatch} from '../models/onlydisptach.model';\n\n@Component({\n  selector: 'app-dispatch',\n  templateUrl: './dispatch.component.html',\n  styleUrls: ['./dispatch.component.css']\n})\nexport class DispatchComponent implements OnInit {\n\n  displayedColumns: string[] = ['sno','invoiceid','extracol','productname','category','quantity','clientname','location','processdate', 'dispatchdate','createddate','expecteddate','actions'];\n  display = 'none';\n  patientdatasource: any;\n  //patientdatasource = new MatTableDataSource(  ); \n private _id :string;\n  route: any;\n  productname : string;\n  onlydispatch: Onlydispatch;\n  Onlydispatch = new Onlydispatch();\n  onlyorders: Onlyorders;\n  Onlyorders = new Onlyorders();\n  allorders: Allorders;\n  Allorders = new Allorders();\n  public isactive : boolean ;\n  \n  \n  \n  constructor(public matDialog: MatDialog, private OnlycompletedService: OnlycompletedService, private allordersService: AllordersService,private OnlydispatchService: OnlydispatchService, private OnlyordersService: OnlyordersService, private router: Router,private datePipe: DatePipe,    private spinner: NgxSpinnerService) { }\n  @ViewChild('scheduledOrdersPaginator') paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n \n  @Output() actionFunction = new EventEmitter();\n\n  loading() {\n    this.spinner.show();\n  \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.inputEvent1();\n      this.spinner.hide();\n    }, 5000);\n  };\n\n  ngOnInit() \n  {\n    this.loading();  \n    this.inputEvent1();\n  }\n\n  refresh(){\n    this.spinner.show();\n    setTimeout(() => {\n      this.data();\n      this.spinner.hide();\n    }, 3000);\n    \n  }\n\n  data()\n  {\n    this.OnlydispatchService.getAll().subscribe((result) => { \n      this.patientdatasource = result;\n      console.log(this.patientdatasource);\n      this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n      this.patientdatasource.paginator = this.paginator;\n      this.patientdatasource.sort = this.sort;\n     \n  \n    })\n  }\n\n \npublic doFilter = (value: string) => {\n  this.patientdatasource.filter = value.trim().toLocaleLowerCase();\n}\n\ndeleteUser(_id: string,invoiceid:string) {\n  if(confirm(\"Are you sure to delete \"+ invoiceid))\n   {\n  this.OnlydispatchService.deleteUser(_id)\n    .subscribe(\n      data => {\n        console.log(data);\n      }, \n      error => console.log(error));\n      window.location.reload();\n} }\n\nExportTOExcel()\n{\n  console.log(\"export\");\n  const workSheet = XLSX.utils.json_to_sheet(this.patientdatasource.data, {header:[]});\n  // delete (workSheet['01'])\n  workSheet['!cols'] = [];\n  workSheet['!cols'][0] = { hidden: true };  \n \n  const workBook: XLSX.WorkBook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\n  \n  XLSX.writeFile(workBook,  new Date().toDateString() + ' DailyDispatch .xlsx');\n\n}\n\npublic  changeisactive(val : any,row){\n  if(confirm(\"Sending To Completed \")) {\n  console.log(val);\n // this.dataRow = row;\n row.extracol=\"Done\";\n row.completeddate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n this.loading();\n// this.dataRow.createddate = this.datePipe.transform(row.value, 'yyyy-MM-dd');\n this.OnlycompletedService.adddispatchproducts(row)\n        .subscribe((res) => {\n      //    console.log(res)\n         // this.addProduct.reset();\n         // this.actionFunction();\n        // this.getaddproducts();   \n       })\n   this.changeisactive1(val,row);\n   this.changeisactive2(val,row);\n }\n}\n\nchangeisactive1(val, row)\n{ \n row.isactive=true;\n row.extracol=\"Done\";\n// console.log(_id);\n// console.log(row);\n  this.OnlydispatchService.updateUser1(val, row)\n  .subscribe((res) => {\n    row = new Onlydispatch();\n    console.log(res)\n  })\n\n}\nchangeisactive2(val, row)\n{\n row.extracol=\"Order Completed\";\n// console.log(_id);\n// console.log(row);\n  this.allordersService.updateUser1(val, row)\n  .subscribe((res) => {\n    row = new Allorders();\n    console.log(res)\n  })\n\n}\n\ninputEvent(event){\n\n  let dispatchdate = this.datePipe.transform(event.value, 'yyyy-MM-dd');\n   console.log(dispatchdate);\n  this.OnlydispatchService.getProductbydate(dispatchdate)\n     .subscribe(data => {\n       console.log(data);\n       this.patientdatasource = data;\n       this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n       //this.gotoList();\n     }, error => console.log(error));\n  console.log(Date);\n\n }\n\n inputEvent1(){\n\n  let dispatchdate =  this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n   console.log(dispatchdate);\n  this.OnlydispatchService.getProductbydate(dispatchdate)\n     .subscribe(data => {\n       console.log(data);\n       this.patientdatasource = data;\n       this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n       //this.gotoList();\n     }, error => console.log(error));\n  console.log(Date);\n \n }\n\n modelChanged(date) {\n  var theDate = new Date(Date.parse(date));\n  const localDate = theDate.toLocaleString().split(\" \");\n\n  console.log(localDate);\n}\n\nchangeEvent(event){\n  // Return date object\n  console.log(event.value);\n}\n\n\n\n\n}\n","<div class=\"form-row parent\">\n    <div class=\"col-md-4\" fxFlex=\"40%\">\n      <mat-form-field style=\"text-align:center;text-decoration: black;\">\n        <input matInput type=\"text\" style=\"color:purple;\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Filter\">\n      </mat-form-field>\n   </div>\n  <div class=\"col-md-4\">\n    <mat-form-field >\n      <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\"  (ngModelChange)=\"modelChanged($event.target.value)\"  (dateInput)=\"inputEvent($event)\" (dateChange)=\"changeEvent($event)\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n    <!-- <mat-form-field class=\"example-full-width\" appearance=\"fill\">\n      <mat-label>Choose a date</mat-label>\n      <input matInput [matDatepicker]=\"picker\"  (ngModelChange)=\"modelChanged($event)\"/>\n      <mat-datepicker-toggle matSuffix  [for]=\"picker\" ></mat-datepicker-toggle>\n      <mat-datepicker touchUi #picker color=\"primary\"></mat-datepicker>\n    </mat-form-field> -->\n  </div>\n  \n  \n    <div >\n      <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"refresh()\"><mat-icon>cached</mat-icon></button>\n      &nbsp;&nbsp;&nbsp; \n      <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"ExportTOExcel()\"><mat-icon style=\"margin-right: 10px;\">get_app</mat-icon>Export</button>\n  </div>\n  \n  \n  </div>\n  \n  \n    <div class=\" test mat-elevation-z9\">\n      \n     \n    <mat-table class=\"lessons-table mat-elevation-z8\"  [dataSource]=\"patientdatasource\" matSort  matSortStart=\"desc\" >\n      <ng-container matColumnDef=\"sno\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>S.No</mat-header-cell>\n        <mat-cell *matCellDef=\"let lesson;let i = index\" >{{ i + 1 }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"invoiceid\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header >Invoice No</mat-header-cell>\n        <mat-cell *matCellDef=\"let lesson\">{{lesson.invoiceid}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"extracol\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\"  >{{lesson.extracol}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"productname\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header >Item</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\">{{lesson.productname}}</mat-cell>  \n    </ng-container>\n    <ng-container matColumnDef=\"category\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Category</mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\" >{{lesson.category}}</mat-cell>  \n  </ng-container>\n  <ng-container matColumnDef=\"quantity\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header  > Quantity</mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\" >{{lesson.quantity}}</mat-cell>\n  </ng-container>\n    <ng-container matColumnDef=\"clientname\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header > Client Name </mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\"  >{{lesson.clientname}}</mat-cell>\n  </ng-container>\n \n<ng-container matColumnDef=\"location\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header   >Location</mat-header-cell>\n  <mat-cell  *matCellDef=\"let lesson\"   >{{lesson.location}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"processdate\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header > Process Start Date</mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\" >{{lesson.processdate | date:'mediumDate'}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"dispatchdate\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header > Dispatch Date</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\" >{{lesson.dispatchdate | date:'mediumDate'}}</mat-cell>\n        </ng-container>\n<ng-container matColumnDef=\"createddate\">\n<mat-header-cell *matHeaderCellDef mat-sort-header  > Order Date</mat-header-cell>\n<mat-cell  *matCellDef=\"let lesson\" >{{lesson.createddate | date:'mediumDate'}}</mat-cell>\n\n</ng-container>\n<ng-container matColumnDef=\"expecteddate\">\n<mat-header-cell *matHeaderCellDef mat-sort-header   >Delivery Date</mat-header-cell>\n<mat-cell  *matCellDef=\"let lesson\"  [ngClass]=\"'w-75'\" >{{lesson.expecteddate | date:'mediumDate'}}</mat-cell>\n</ng-container>\n  <ng-container matColumnDef=\"actions\">\n  <th mat-header-cell  *matHeaderCellDef > Actions </th>\n  <td mat-cell *matCellDef=\"let lesson\"  >\n    <!-- <button mat-button >Edit</button> -->\n    <button mat-icon-button color=\"warn\"  matTooltip=\"Dispatch Done \" matTooltipPosition=\"above\" (click)=\"changeisactive(lesson._id,lesson)\" [disabled]=\"lesson.isactive\"    ><mat-icon   >swap_horiz</mat-icon></button>\n    <button mat-icon-button color=\"warn\"  matTooltip=\"Delete Order\" matTooltipPosition=\"above\" (click)=\"deleteUser(lesson._id,lesson.productname)\"  ><mat-icon>delete</mat-icon></button>\n  \n  </td>\n  \n  </ng-container>\n  \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\" ></mat-row>\n  \n  </mat-table>\n  <mat-paginator #scheduledOrdersPaginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n  \n  <!-- <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"setPageSizeOptions($event)\">\n  </mat-paginator> -->\n  \n  <ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#1863c5\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\n  </div>","export class Allorders {\r\n\tconstructor(){\r\n\t\tthis._id='';\r\n\t\tthis.productname = '';\r\n\t\tthis.clientname = '';\r\n        this.category = '';\r\n\t\tthis.invoiceid = '';\r\n        this.clientprice = '';\r\n\t\tthis.advancereceived ='';\r\n\t\tthis.tobepaid ='';\r\n\t\tthis.extracol = '';\r\n        this.isactive = '';\r\n\t\tthis.location = '';\r\n\t\tthis.quantity ='';\r\n\t\tthis.expecteddate = '';\r\n        this.createddate = '';\r\n\t\tthis.lastupdated = '';\r\n\r\n\t}\r\n\tpublic _id;\r\n\tpublic productname;\r\n\tpublic clientname;\r\n    public category;\r\n\tpublic invoiceid;\r\n    public clientprice;\r\n\tpublic advancereceived;\r\n\tpublic tobepaid;\r\n\tpublic extracol;\r\n    public isactive;\r\n\tpublic location;\r\n\tpublic quantity;\r\n\tpublic expecteddate;\r\n    public createddate;\r\n\tpublic lastupdated;\r\n\r\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { PurchaseproductService } from '../services/purchaseproduct.service';\nimport { DatePipe } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-addpurchaseproduct',\n  templateUrl: './addpurchaseproduct.component.html',\n  styleUrls: ['./addpurchaseproduct.component.css']\n})\nexport class AddpurchaseproductComponent implements OnInit {\n\n  category1: any;\n\n  addAllorders: FormGroup;\n  AllordersService: any;\n  ProductService:any;\n  myDate = new Date();\n  isLoggedIn$: Observable<boolean>;   \n  totalCount: number;\n  category: any;\n  selectedUser ;\n  productname1: any;\n  purchasedate : any;\n  minDate = new Date();\n  @Output() emitValue: EventEmitter<string> = new EventEmitter<string>();\n  category2: any;\n  constructor(public dialogRef: MatDialogRef<AddpurchaseproductComponent>,private purchaseproductService : PurchaseproductService,  private router: Router,private authService: AuthenticationService,\n    public fb: FormBuilder, public datepipe: DatePipe) {\n    this.form()\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  inputEvent(event){\n    let purchasedate = this.datepipe.transform(new Date(event.target.value), 'yyyy-MM-dd');\n     console.log(purchasedate);\n     this.addAllorders.controls.purchasedate.setValue(purchasedate);\n  \n   }\n\n\n   form() {\n    this.addAllorders = this.fb.group({\n      purchaseorder: [''],\n      productname: [''],\n      productcode:[''],\n      category:  [''],\n      sellername:  [''],\n      sellerprice: [''], \n      quantitypurchased : [''],\n      comments :[''],\n      createddate:  this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\n      purchasedate:  this.datepipe.transform(new Date(), 'yyyy-MM-dd'),\n      lastupdated: ['']\n\n    })\n  }\n\n\n  submit() {\n    if (!this.addAllorders.valid) {\n      return false;\n    } else {\n      console.log(this.addAllorders.value)\n      this.purchaseproductService.addproducts(this.addAllorders.value)   \n        .subscribe((res) => {\n          console.log(res)\n          this.addAllorders.reset();\n       this.actionFunction();\n         window.location.reload();\n        })\n    }\n  }\n\n\n  actionFunction() {\n    alert(\"Product Added Successfully\");\n    this.closeModal();\n  }\n\n  closeModal() {\n    this.dialogRef.close();\n  }\n\n}\n","<div id=\"modal-content-wrapper\">\n    <form [formGroup]=\"addAllorders\" name=\"add\" (ngSubmit)=\"submit()\">\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n                <label for=\"purchaseorder\">Purchase Order No</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"purchaseorder\" placeholder=\"Enter P.O No.\"\n                    required>\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"category\">Category</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"category\" placeholder=\"Enter category\"\n                    required>\n\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"productname\">Item</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"productname\" placeholder=\"Enter Item Name\"\n                    required>\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"productcode\">Item</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"productcode\" placeholder=\"Enter Item Code\"\n                    required>\n            </div>\n        </div>\n\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"sellername\">Seller Name</label>\n                <input type=\"text\" class=\"form-control\" formControlName=\"sellername\" placeholder=\"Enter Seller Name\"\n                    required>\n            </div>\n\n            <div class=\"form-group col-md-6\">\n                <label for=\"sellerprice\">Seller Price</label>\n                <input type=\"number\" class=\"form-control\" formControlName=\"sellerprice\" placeholder=\"Enter Item Price\"\n                    required>\n            </div>\n\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"quantitypurchased\">Quantity Purchased</label>\n                <input type=\"number\" class=\"form-control\" formControlName=\"quantitypurchased\"\n                    placeholder=\"Enter Quantity Purchased\" required>\n            </div>\n            <div class=\"form-group col-md-6\">\n                <mat-form-field>\n                    <label for=\"purchasedate\">Purchased Date</label>\n                    <input (dateInput)=\"inputEvent($event)\" matInput [matDatepicker]=\"myPicker\"\n                        formControlName=\"purchasedate\"  value=\"{{purchasedate | date :'yyyy-MM-dd'}}\"\n                        required>\n                    <mat-datepicker-toggle matSuffix [for]=\"myPicker\"></mat-datepicker-toggle>\n                    <mat-datepicker #myPicker></mat-datepicker>\n                </mat-form-field>\n\n            </div>\n        </div>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"comments\">Comments </label>\n                <textarea type=\"text\" class=\"form-control\" formControlName=\"comments\" required>\n                    </textarea>\n    </div>\n</div>\n     \n\n       \n      </form>\n   \n    <footer id=\"modal-footer\">\n      <button mat-raised-button   id=\"modal-cancel-button\" style='margin-right:16px' (click)=\"closeModal()\">Cancel</button>\n      <button mat-raised-button [disabled]=\"addAllorders.controls['purchaseorder' || 'productname' || 'category' ||'sellername' || 'sellerprice' || 'expecteddate'].invalid\"  id=\"modal-action-button\" style='margin-right:16px' (click)=\"submit()\">Save</button>\n      \n  </footer>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from '../../environments/environment';\r\nimport { User } from '../models/user.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll() {\r\n        return this.http.get(`${environment.apiUrl}/users`);\r\n    }\r\n\r\n\r\n    // userLogin(payload) {\r\n    //     return this.http.post(`${environment.apiUrl}users/login`, payload);\r\n    //   }\r\n\r\n      \r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { environment } from '../../environments/environment';\r\nimport { Onlyorders } from '../models/onlyorders.model';\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OnlyordersService {\r\n    constructor(private http: HttpClient) { }\r\n    httpOptions = {\r\n        headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n      };\r\n    \r\n      dataRow:any;\r\n\r\n    addusedproducts(addProduct: Onlyorders): Observable<any> {\r\n        return this.http.post<Onlyorders>(`${environment.apiUrl}onlyorders/addonlyorders`, addProduct, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Onlyorders>('Add Song'))\r\n          );\r\n      }\r\n\r\n      adddispatchproducts(dataRow: Onlyorders): Observable<any> {\r\n        return this.http.post<Onlyorders>(`${environment.apiUrl}onlyorders/addonlyorders`, dataRow, this.httpOptions)\r\n          .pipe(\r\n            catchError(this.handleError<Onlyorders>('Add Song'))\r\n          );\r\n      }\r\n\r\n\r\n    getAll() {\r\n        return this.http.get(`${environment.apiUrl}onlyorders/getonlyorders`);\r\n    }\r\n\r\n    getAllordercount() {\r\n      return this.http.get(`${environment.apiUrl}onlyorders/getonlyorderscount`);\r\n  }\r\n\r\n\r\n    deleteUser(_id: string): Observable<any> {\r\n      return this.http.delete(`${environment.apiUrl}onlyorders/deleteonlyorderbyid/${_id}`, { responseType: 'text' });\r\n    }\r\n    \r\n    updateUser1(_id: string, value: any): Observable<Object> {\r\n      console.log(value);\r\n      return this.http.put(`${environment.apiUrl}onlyorders/setisactivebyid/${_id}` , value);\r\n      \r\n    }\r\n\r\n    getProductbydate(processdate :String) {\r\n      return this.http.get<Onlyorders[]>(`${environment.apiUrl}onlyorders/getproductbydate/` + processdate )\r\n      \r\n        .pipe(\r\n          tap(_ => console.log(`Product id retrieved: ${processdate}`)),\r\n          catchError(this.handleError<Onlyorders[]>(`Get Song id=${processdate}`))\r\n          \r\n        );\r\n       \r\n    }\r\n  \r\n       \r\n\r\n\r\n\r\n\r\n\r\n    private handleError<T>(operation = 'operation', result?: T) {\r\n        return (error: any): Observable<T> => {\r\n          // TODO: send the error to remote logging infrastructure\r\n          console.error(error);\r\n          // TODO: better job of transforming error for user consumption\r\n          console.log(`${operation} failed: ${error.message}`);\r\n          // Let the app keep running by returning an empty result.\r\n          return of(result as T);\r\n        };\r\n      }\r\n}","export class Onlydispatch {\r\n\tconstructor(){\r\n\t\tthis._id='';\r\n\t\tthis.productname = '';\r\n\t\tthis.clientname = '';\r\n        this.category = '';\r\n\t\tthis.invoiceid = '';\r\n        this.clientprice = '';\r\n\t\tthis.advancereceived ='';\r\n\t\tthis.tobepaid ='';\r\n\t\tthis.extracol = '';\r\n        this.isactive = '';\r\n\t\tthis.location = '';\r\n\t\tthis.processdate ='';\r\n        this.dispatchdate = '',\r\n\t\tthis.expecteddate = '';\r\n        this.createddate = '';\r\n\t\tthis.lastupdated = '';\r\n\r\n\t}\r\n\tpublic _id;\r\n\tpublic productname;\r\n\tpublic clientname;\r\n    public category;\r\n\tpublic invoiceid;\r\n    public clientprice;\r\n\tpublic advancereceived;\r\n\tpublic tobepaid;\r\n\tpublic extracol;\r\n    public isactive;\r\n\tpublic location;\r\n\tpublic processdate;\r\n    public dispatchdate;\r\n\tpublic expecteddate;\r\n    public createddate;\r\n\tpublic lastupdated;\r\n\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { User } from '../models/user.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { FormBuilder, FormGroup, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UserService } from '../services/user.service';\nimport { first } from 'rxjs/operators';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n  providers: [LoginService]\n})\nexport class LoginComponent {\n\n  public user: User;\n\n\n\n\n  // constructor(private loginService: LoginService ,private router:Router, ) {\n  // \tthis.user = new User();\n  // }\n\n  // validateLogin() {\n  // \tif(this.user.email && this.user.password) {\n\n  // \t\tthis.loginService.validateLogin(this.user).subscribe(result => {\n  //       console.log('result is ', result);\n  //       this.router.navigate(['/dashboard']);\n  //     },\n  //      error => {\n  //       console.log('error is ', error);\n  //     });\n  // \t} else {\n  // \t\talert('enter email and password');\n  // \t}\n  // }\n\n\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private router: Router,\n    private route: ActivatedRoute,\n\n\n  ) {\n    // redirect to home if already logged in\n    if (this.authService.userValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/dasboard' || '/products';\n  }\n  get f() { return this.loginForm.controls; }\n\n\n\n\n  // onSubmit() {\n  //   this.submitted = true;\n  //   if (this.loginForm.invalid) {\n  //     return;\n  //   } \n  //   this.loading = true;\n  //   this.authService.login(this.f.email.value, this.f.password.value)\n  //     .pipe(first())\n  //     .subscribe({\n  //       // (data: any) {\n  //       next: () => {\n  //         this.router.navigate([this.returnUrl]);\n  //         // this.authService.login(this.form.value);\n  //       },\n  //       error: error => {\n  //         this.error = error;\n  //         this.loading = false;\n  //       }\n  //     });\n  // }\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n        return;\n    }\n\n    this.loading = true;\n    this.authService.login(this.f.email.value, this.f.password.value)\n        .pipe(first())\n        .subscribe({\n            next: () => {\n                this.router.navigate([this.returnUrl]);\n            },\n            error: error => {\n                this.error = error;\n                this.loading = false;\n            }\n        });\n}\n\n}\n","\n\n<!DOCTYPE html>\n<html>\n<head>\n<title> Annapurna Engineers </title>\n</head>\n\n  <body>\n   \n    <div class=\"box\">\n      <div class='wave -one'>\n        <div class='wave -two'></div>\n          <div class='wave -three'></div>\n        </div>\n        </div>\n    <div class=\"login-page \"  >\n\n     \n      \n  \n      \n        <img src=\"assets\\logo.png\" alt=\"logo\" class=\"center\" style=\"padding-left: 50px;\">\n\n      <div class=\"form\">\n        <div class=\"login\">\n          <div class=\"login-header\">\n    \n          </div>\n        </div>\n<!-- \n        <form class=\"form-signin\">\n          <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\n             <input name=\"email\" [(ngModel)] = \"user.email\" type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\n             <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n             <input name=\"password\" [(ngModel)] = \"user.password\" type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\n             <div class=\"checkbox\">\n              \n                <input type=\"checkbox\" value=\"remember-me\"> Remember me\n          \n             </div>\n       <button class=\"btn btn-lg btn-primary btn-block\" (click)=\"validateLogin();\" type=\"button\">Sign in</button>\n     </form> -->\n     <mat-card style=\" background: -webkit-linear-gradient(#25a7d7, #2962FF);\">\n      <mat-card-content>\n    \n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n          <p>Please login to continue</p>\n          <div class=\"form-group\">\n              <label for=\"email\" style=\"margin-right: 285px;font: style 200px;\">Email</label>\n              <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n              <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n              </div>\n          </div>\n          <div class=\"form-group\">\n              <label for=\"password\" style=\"margin-right: 260px;font: style 200px;\">Password</label>\n              <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n              <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.password.errors.required\">Password is required</div>\n              </div>\n          </div>\n          <button [disabled]=\"loading\" class=\"btn btn-primary\">\n              <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n              Login\n          </button>\n          <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n      </form>\n      </mat-card-content>\n    </mat-card>\n       \n      </div>\n   \n   \n    </div>\n \n</body>\n\n</html>\n\n<router-outlet></router-outlet>","import {NgModule} from \"@angular/core\";\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list'; \r\nimport {MatButtonModule} from '@angular/material/button'; \r\nimport {MatIconModule} from '@angular/material/icon'; \r\nimport { MatToolbarModule} from '@angular/material/toolbar';\r\nimport { MatSelectModule} from '@angular/material/select';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSortModule } from '@angular/material/sort'; \r\nimport { MatDatepickerModule } from '@angular/material/datepicker'; \r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'; \r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatMenuModule,MatProgressBarModule,MatProgressSpinnerModule,MatDatepickerModule,MatSortModule,MatInputModule, MatFormFieldModule,MatCardModule,MatDialogModule,CommonModule,MatTableModule,MatSelectModule, MatButtonModule,MatToolbarModule , MatIconModule, MatSidenavModule, MatListModule, MatPaginatorModule],\r\n  exports: [MatMenuModule,MatProgressBarModule,MatProgressSpinnerModule,MatDatepickerModule,MatSortModule,MatInputModule,MatFormFieldModule, MatCardModule,MatDialogModule,CommonModule,MatTableModule,MatSelectModule, MatButtonModule, MatToolbarModule, MatIconModule, MatSidenavModule, MatListModule, MatPaginatorModule],\r\n})\r\nexport class CustomMaterialModule { }","import { Component, EventEmitter, Inject, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatSort } from '@angular/material/sort'\nimport { AfterViewInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { EditallordersComponent } from '../editallorders/editallorders.component';\nimport { AddallordersComponent } from '../addallorders/addallorders.component';\nimport { OnlyordersService } from '../services/onlyorders.service';\nimport * as XLSX from 'xlsx';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { AllordersService } from '../services/allorders.service';\n\nimport { DatePipe } from '@angular/common';\nimport { Allorders } from '../models/allorders.model';\n\n\n@Component({\n  selector: 'app-allorders',\n  templateUrl: './allorders.component.html',\n  styleUrls: ['./allorders.component.css']\n})\nexport class AllordersComponent implements OnInit {\n  displayedColumns: string[] = ['sno','invoiceid','extracol','productname','category','quantity','clientname','clientprice','advancereceived','location','createddate','expecteddate','actions'];\n\n\n  display = 'none';\n  patientdatasource: any;\n  //patientdatasource = new MatTableDataSource(  ); \n private _id :string;\n  route: any;\n  productname : string;\n  invoiceid : string;\n  dataRow:any;\n public isactive : boolean ;\n  allorders: Allorders;\n  Allorders = new Allorders();\n\n  constructor(public matDialog: MatDialog, private allordersService: AllordersService,private datePipe: DatePipe, private onlyordersService: OnlyordersService, private router: Router,  private spinner: NgxSpinnerService) { }\n  @ViewChild('scheduledOrdersPaginator') paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n \n  @Output() actionFunction = new EventEmitter();\n\n  ngOnInit()\n   {\n   this.loading();\n //  this.data();\n  }\n\n  loading() \n  {\n    this.spinner.show();\n  \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.data();\n      this.spinner.hide();\n    }, 5000);\n  };\n\n  public doFilter = (value: string) => {\n    this.patientdatasource.filter = value.trim().toLocaleLowerCase();\n  }\n\n  data()\n  {\n    this.allordersService.getAll().subscribe((result) => {\n      this.patientdatasource = result;\n      console.log(this.patientdatasource);\n      this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n      this.patientdatasource.paginator = this.paginator;\n      this.patientdatasource.sort = this.sort;\n     \n\n    })\n  }\n\n\ndeleteUser(_id: string,productname:string) {\n  if(confirm(\"Are you sure to delete \"+ this.invoiceid)) {\n  this.allordersService.deleteUser(_id)\n    .subscribe(\n      data => {\n        console.log(data);\n      //  this.reloadData();\n      },\n      error => console.log(error));\n      window.location.reload();\n}}\n\npublic  changeisactive(val : any,row){\n  if(confirm(\"Sending To Production \")) {\n  console.log(val);\n // this.dataRow = row;\n row.isactive=false;\n row.processdate = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n this.loading();\n// this.dataRow.createddate = this.datePipe.transform(row.value, 'yyyy-MM-dd');\n this.onlyordersService.adddispatchproducts(row)\n        .subscribe((res) => {\n      //    console.log(res)\n         // this.addProduct.reset();\n         // this.actionFunction();\n        // this.getaddproducts();\n        \n       })\n\n   this.changeisactive1(val,row);\n      }\n}\n\nchangeisactive1(val, row)\n{\n  \n row.isactive=true;\n row.extracol=\"Processing\";\n// console.log(_id);\n// console.log(row);\n  this.allordersService.updateUser1(val, row)\n  .subscribe((res) => {\n    row = new Allorders();\n    console.log(res)\n  })\n\n}\n\n\ninputEvent1(){\n\n  let createddate =  this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n   console.log(createddate);\n  this.allordersService.getProductbydate(createddate)\n     .subscribe(data => {\n       console.log(data);\n       this.patientdatasource = data;\n       this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n       this.patientdatasource.paginator = this.paginator;\n      this.patientdatasource.sort = this.sort;\n       //this.gotoList();\n     }, error => console.log(error));\n  console.log(Date);\n \n \n }\n inputEvent(event){\n\n  let createddate = this.datePipe.transform(event.value, 'yyyy-MM-dd');\n   console.log(createddate);\n  this.allordersService.getProductbydate(createddate)\n     .subscribe(data => {\n       console.log(data);\n       this.patientdatasource = data;\n       this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n       this.patientdatasource.paginator = this.paginator;\n       this.patientdatasource.sort = this.sort;\n       //this.gotoList();\n     }, error => console.log(error));\n  console.log(Date);\n\n }\n\n\nmodelChanged(date) {\n  var theDate = new Date(Date.parse(date));\n  const localDate = theDate.toLocaleString().split(\" \");\n\n  console.log(localDate);\n}\n\n\n\nopenModal1() {\n  const dialogConfig = new MatDialogConfig();\n  // The user can't close the dialog by clicking outside its body\n  dialogConfig.disableClose = true;\n  dialogConfig.id = \"modal-component\";\n  dialogConfig.height = \"550px\";\n  dialogConfig.width = \"850px\";\n  \n  const modalDialog = this.matDialog.open(AddallordersComponent, dialogConfig);\n}\n\nopenModal(val) {\n  console.log(val); \n  const dialogConfig = new MatDialogConfig();\n  // The user can't close the dialog by clicking outside its body\n  dialogConfig.disableClose = true;\n  dialogConfig.id = \"modal-component\";\n  dialogConfig.height = \"550px\";\n  dialogConfig.width = \"850px\";\n  dialogConfig.data = val._id;\n  // https://material.angular.io/components/dialog/overview\n  const modalDialog = this.matDialog.open(EditallordersComponent, dialogConfig);\n }\n\n\nExportTOExcel()\n{\n  console.log(\"export\");\n  const workSheet = XLSX.utils.json_to_sheet(this.patientdatasource.data, {header:[]});\n  workSheet['!cols'] = [];\n  workSheet['!cols'][0] = { hidden: true };  \n  workSheet['!cols'][10] = { hidden: true }; \n  workSheet['!cols'][15] = { hidden: true };  \n  console.log(this.patientdatasource.data.expecteddate)\n  const workBook: XLSX.WorkBook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\n  XLSX.writeFile(workBook, 'Orders.xlsx');\n\n}\n\n}\n","\n  <ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#1863c5\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\n  <div class=\"form-row parent\">\n    <div class=\"col-md-4\" fxFlex=\"40%\">\n      <mat-form-field style=\"text-align:center;text-decoration: black;\">\n        <input matInput type=\"text\" style=\"color:purple;\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Filter\">\n      </mat-form-field>\n   </div>\n   <div class=\"col-md-4\">\n    <mat-form-field >\n      <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\"  (ngModelChange)=\"modelChanged($event.target.value)\"  (dateInput)=\"inputEvent($event)\" >\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n  \n</div>\n    <div >\n      <button mat-button   style=\"color:#ffffff;background-color:#003366;\" (click)=\"openModal1()\">Add Orders</button>\n      &nbsp;&nbsp;&nbsp; \n      <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"ExportTOExcel()\"><mat-icon style=\"margin-right: 10px;\">get_app</mat-icon>Export</button>\n  </div>\n  \n</div>\n\n\n\n\n\n\n\n    <div class=\" test mat-elevation-z9\" >\n      \n     \n    <mat-table class=\"lessons-table mat-elevation-z8\"  [dataSource]=\"patientdatasource\" matSort  matSortDirection=\"asc\"  >\n      <ng-container matColumnDef=\"sno\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header >S.No</mat-header-cell>\n        <mat-cell *matCellDef=\"let lesson;let i = index\"  >{{ i + 1 }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"invoiceid\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header >Invoice No</mat-header-cell>\n          <mat-cell *matCellDef=\"let lesson\">{{lesson.invoiceid}}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"extracol\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>Status</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\"  >\n          <span *ngIf ='lesson.extracol == \"Pending\"' style=\"color: orangered;\">{{lesson.extracol}}</span>\n          <span *ngIf ='lesson.extracol == \"Processing\"' style=\"color: mediumblue;\">{{lesson.extracol}}</span>\n          <span *ngIf ='lesson.extracol == \"Ready To Dispatch\"' style=\"color: maroon;\">{{lesson.extracol}}</span>\n          <span *ngIf ='lesson.extracol == \"Order Completed\"' style=\"color:palevioletred;\">{{lesson.extracol}}</span>\n          <span *ngIf ='lesson.extracol == \"Full Amount Received\"' style=\"color:rgb(172, 172, 172);\">{{lesson.extracol}}</span>\n        </mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"productname\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header >Item</mat-header-cell>\n          <mat-cell  *matCellDef=\"let lesson\">{{lesson.productname}}</mat-cell>  \n      </ng-container>\n      <ng-container matColumnDef=\"category\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header >Category</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\" >{{lesson.category}}</mat-cell>  \n    </ng-container>\n    <ng-container matColumnDef=\"quantity\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header  > Quantity</mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\" >{{lesson.quantity}}</mat-cell>\n    </ng-container>\n      <ng-container matColumnDef=\"clientname\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header > Client Name </mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\"  >{{lesson.clientname}}</mat-cell>\n    </ng-container>\n    <ng-container matColumnDef=\"advancereceived\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header >Advance Amount </mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\"  >{{lesson.advancereceived}}</mat-cell>\n  </ng-container>\n    <ng-container matColumnDef=\"clientprice\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header  > Client Price </mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\"  >{{lesson.clientprice}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"location\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header   >Location</mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\"   >{{lesson.location}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"createddate\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header  > Order Date</mat-header-cell>\n  <mat-cell  *matCellDef=\"let lesson\" >{{lesson.createddate | date:'mediumDate'}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"expecteddate\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header  [ngClass]=\"'w-70'\" >Delivery Date</mat-header-cell>\n  <mat-cell  *matCellDef=\"let lesson\"  [ngClass]=\"'w-75'\" >{{lesson.expecteddate | date:'mediumDate'}}</mat-cell>\n</ng-container>\n\n<ng-container matColumnDef=\"actions\"  >\n  <th mat-header-cell  *matHeaderCellDef > Actions </th>\n  <td mat-cell *matCellDef=\"let lesson\"  >\n    <!-- <button mat-button >Edit</button> -->\n    <button mat-icon-button  color=\"warn\" matTooltip=\"Edit\" matTooltipPosition=\"above\" (click)=\"openModal(lesson)\"><mat-icon>more_vert</mat-icon></button>\n    <button mat-icon-button color=\"warn\"  matTooltip=\"Send to Production\" matTooltipPosition=\"above\" (click)=\"changeisactive(lesson._id,lesson)\" [disabled]=\"lesson.isactive\"    ><mat-icon   >swap_horiz</mat-icon></button>\n    <button mat-icon-button color=\"warn\"  matTooltip=\"Delete Order\" matTooltipPosition=\"above\"  (click)=\"deleteUser(lesson._id,lesson.productname)\"  ><mat-icon>delete</mat-icon></button>\n\n  </td>\n\n</ng-container>\n  \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\" style=\"justify-self: start;;\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\" ></mat-row>\n  \n  </mat-table>\n  <mat-paginator #scheduledOrdersPaginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n\n  <!-- <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"setPageSizeOptions($event)\">\n  </mat-paginator> -->\n\n\n\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { DatePipe } from '@angular/common';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { Product } from '../models/product.model';\nimport { Usedproduct } from '../models/usedproduct.model'\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\nimport { ProductsusedComponent } from '../productsused/productsused.component';\nimport { MAT_DIALOG_DATA, } from \"@angular/material/dialog\";\nimport { UsedproductService } from '../services/usedproduct.service';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { FormControl } from '@angular/forms';\nimport { ProductService } from '../services/product.service';\n\n@Component({\n  selector: 'app-editusedproduct',\n  templateUrl: './editusedproduct.component.html',\n  styleUrls: ['./editusedproduct.component.css']\n})\nexport class EditusedproductComponent implements OnInit {\n\nisremactive = false;\n  _id: string;\n  //public id: string;\n  usedproduct: Usedproduct;\n  employee: Usedproduct = new Usedproduct();\n  //route: any;\n  updateSongForm: FormGroup;\n  public productDetail: any;\n  tobepaid: number;\n  updatedvales: any;\n  pushprovalue: any;\n  getprovalue:any;\n  product = new Product();\n  Product = new Product();\n  category: any;\n  category2: any;\n  productname1: any;\n  productcode2: Product[];\n\n  constructor(public dialogRef: MatDialogRef<EditusedproductComponent>, private usedproductService: UsedproductService, private router: Router, private datePipe: DatePipe, private actRoute: ActivatedRoute, public fb: FormBuilder, @Inject(MAT_DIALOG_DATA) public data: any,\n    @Inject(MAT_DIALOG_DATA) private dialogData: any, private productService: ProductService) { }\n\n  ngOnInit() {\n    this._id = this.dialogData;\n    console.log(\"gh\" + this._id);\n    // debugger;\n    this.usedproductService.getUsedproductbyid(this._id)\n      .subscribe(data => {\n        console.log(data, 'here')\n        this.usedproduct = data;\n        this.updatedvales = data;\n      this.changedvalue1();\n        console.log(this.updatedvales);\n        \n      }, error => console.log(error));\n\n  }\n\n\n  updateUser() {\n    this.usedproduct.lastupdated = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    //  this.allorders.isactive ='false';\n    this.usedproductService.updateUsedproduct(this._id, this.usedproduct)\n      .subscribe(data => {\n        console.log(data);\n        this.pushprovalue=data;\n        this.usedproduct = new Usedproduct();\n        \n\n      }, error => console.log(error));\n   window.location.reload();\n  }\n\n\n  closeModal() {\n    this.dialogRef.close();\n  }\n\n\n\n\n \n\n\n  addvalue() {\n    //this.totalCount = 20;\n\n    let ews1 = this.usedproduct.enterworkshop1;\n    let bws1 = this.usedproduct.balanceworkshop1;\n\n    let ews2 = this.usedproduct.enterworkshop2;\n    let bws2 = this.usedproduct.balanceworkshop2;\n\n    let ews3 = this.usedproduct.enterworkshop3;\n    let bws3 = this.usedproduct.balanceworkshop3;\n\n\n    this.usedproduct.pushworkshop1 = parseInt(bws1) - parseInt(ews1);\n    this.usedproduct.pushworkshop2 = parseInt(bws2) - parseInt(ews2);\n    this.usedproduct.pushworkshop3 = parseInt(bws3) - parseInt(ews3);\n    //  let total = pw1+pw2+pw3;\n    this.usedproduct.pushtotal = this.usedproduct.pushworkshop1 + this.usedproduct.pushworkshop2 + this.usedproduct.pushworkshop3;\n\n    console.log(this.usedproduct);\n\n  }\n\n  changedvalue1() {\n    // this.emitValue.emit(this.selectedUser);\n    //console.log(this.selectedUser)\n    console.log();\n    this.productService.getProductbyname(this.updatedvales.productname).subscribe((result) => {\n   console.log(result);\n   this.getprovalue = result;\n    }, error => console.log(error));\n    this.pushProduct();\n  }\n\n\n\n  pushProduct() {\n\n    console.log(this.updatedvales, this.getprovalue)\n    console.log(this.product)\n\n    this.product._id = this.getprovalue._id;\n    this.product.productname = this.getprovalue.productname;\n    this.product.productcode = this.getprovalue.productcode;\n    this.product.price = this.getprovalue.price;\n    this.product.category = this.getprovalue.category;\n    this.product.comments = this.getprovalue.comments;\n    this.product.createddate = this.getprovalue.createddate;\n\n    this.product.workshop1 = this.updatedvales.pushworkshop1;\n    this.product.workshop2 = this.updatedvales.pushworkshop2;\n    this.product.workshop3 = this.updatedvales.pushworkshop3;\n    this.product.totalavailable = this.updatedvales.pushtotal;\n    this.product.lastupdated = this.datePipe.transform(new Date(), 'yyyy-MM-dd');\n    this.productService.updateUser2(this.updatedvales.productname, this.product)\n      .subscribe(data => {\n        console.log(data);\n        this.product = new Product();\n\n      }, error => console.log(error));\n\n\n  }\n\n  actionFunction() {\n    //  alert(\"You have logged out.\");\n    this.updateUser();\n    this.pushProduct();\n   this.closeModal();\n  }\n\n}\n","<div id=\"modal-content-wrapper\">\n    <form *ngIf=\"usedproduct\">\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-4\">\n                <label for=\"category\">Category</label>\n               \n                <input type=\"text\" class=\"form-control\" disabled id=\"category\" required \n                [(ngModel)]=\"usedproduct.category\" name=\"category\">\n       \n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"productname\">Product</label> \n                <input type=\"text\" class=\"form-control\" disabled id=\"productname\" required\n                [(ngModel)]=\"usedproduct.productname\" name=\"productname\">\n            </div>\n            <div class=\"form-group col-md-4\">\n                <label for=\"productcode\">Product Code</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"productcode\" required\n                    [(ngModel)]=\"usedproduct.productcode\" name=\"productcode\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n\n\n            <div class=\"form-group col-md-3\">\n                <label for=\"Workshop 1\">Location</label>\n                <input type=\"checkbox\" disabled class=\"custom-control-input\" id=\"Workshop 1\">\n                <select disabled id=\"Workshop 1\" class=\"form-control\">\n                    <option selected>Workshop 1</option>\n                </select>\n            </div>\n\n            <div class=\"form-group col-md-3\">\n                <label for=\"enterworkshop1\">Quantity Used</label>\n                <input type=\"text\" class=\"form-control\" id=\"enterworkshop1\" (input)=\"addvalue()\" required\n                    [(ngModel)]=\"usedproduct.enterworkshop1\" name=\"enterworkshop1\" >\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"balanceworkshop1\">Total Available</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"balanceworkshop1\" required\n                    [(ngModel)]=\"usedproduct.balanceworkshop1\" name=\"balanceworkshop1\">\n            </div>\n\n            <div class=\"form-group col-md-3\">\n                <label for=\"pushworkshop1\">Remaining Available</label>\n                <input type=\"text\" class=\"form-control\"  id=\"pushworkshop1\"  [disabled]='!isremactive' required\n                    [(ngModel)]=\"usedproduct.pushworkshop1\" name=\"pushworkshop1\">\n            </div>\n        </div>\n        <div class=\"form-row\">\n        <div class=\"form-group col-md-3\">\n           \n                <label for=\"Workshop 2\">Location</label>\n                <input type=\"checkbox\" disabled class=\"custom-control-input\" id=\"Workshop 2\">\n                <select disabled id=\"Workshop 2\" class=\"form-control\">\n                    <option selected>Workshop 2</option>\n                </select>\n            </div>\n\n            <div class=\"form-group col-md-3\">\n                <label for=\"enterworkshop2\">Quantity Used</label>\n                <input type=\"text\" class=\"form-control\" id=\"enterworkshop2\" (input)=\"addvalue()\" required\n                    [(ngModel)]=\"usedproduct.enterworkshop2\" name=\"enterworkshop2\" >\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"balanceworkshop2\">Total Available</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"balanceworkshop2\" required\n                    [(ngModel)]=\"usedproduct.balanceworkshop1\" name=\"balanceworkshop1\" >\n            </div>\n\n            <div class=\"form-group col-md-3\">\n                <label for=\"pushworkshop2\">Remaining Available</label>\n                <input type=\"text\" class=\"form-control\"  id=\"pushworkshop2\"  [disabled]='!isremactive' required\n                    [(ngModel)]=\"usedproduct.pushworkshop2\" name=\"pushworkshop2\" >\n            </div>\n\n        </div>\n\n\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-3\">\n                <label for=\"Workshop 3\">Location</label>\n                <input type=\"checkbox\" disabled class=\"custom-control-input\" id=\"Workshop 3\">\n                <select disabled id=\"Workshop 3\" class=\"form-control\">\n                    <option selected>Workshop 3</option>\n                </select>\n            </div>\n\n            <div class=\"form-group col-md-3\">\n                <label for=\"enterworkshop3\">Quantity Used</label>\n                <input type=\"text\" class=\"form-control\" id=\"enterworkshop3\" (input)=\"addvalue()\" required\n                    [(ngModel)]=\"usedproduct.enterworkshop3\" name=\"enterworkshop3\" >\n            </div>\n            <div class=\"form-group col-md-3\">\n                <label for=\"balanceworkshop3\">Total Available</label>\n                <input type=\"text\" class=\"form-control\" disabled id=\"balanceworkshop3\" required\n                    [(ngModel)]=\"usedproduct.balanceworkshop3\" name=\"balanceworkshop3\">\n            </div>\n\n            <div class=\"form-group col-md-3\">\n                <label for=\"pushworkshop3\">Remaining Available</label>\n                <input type=\"text\" class=\"form-control\"  id=\"pushworkshop3\" [disabled]='!isremactive' required\n                    [(ngModel)]=\"usedproduct.pushworkshop3\"  name=\"pushworkshop3\" >\n            </div>\n        </div>\n\n\n\n\n<div class=\"form-row\">\n    <div class=\"form-group col-md-6\">\n        <label for=\"pushtotal\">Total Remaining Available</label>\n        <input disabled type=\"text\" disabled class=\"form-control\" name=\"pushtotal\"   [(ngModel)]=\"usedproduct.pushtotal\" >\n    </div>\n</div>\n\n</form>\n<button mat-raised-button id=\"modal-edit-button\" style=\"margin-right:16px;justify-self:left !important\" (click)='isremactive=true'>Edit</button>\n<footer id=\"modal-footer\">\n    \n    <button mat-raised-button id=\"modal-cancel-button\" style='margin-right:16px;justify-self: right;align-self: center !important;' (click)=\"closeModal()\">Cancel</button>\n    <button mat-raised-button id=\"modal-action-button\" style='margin-right:16px;justify-self: right;align-self: center !important;' (click)=\"actionFunction()\">Save</button>\n\n</footer>\n</div>","import { Component, OnInit,Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA,} from \"@angular/material/dialog\";\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\n\nimport { ProductService } from '../services/product.service';\nimport { Product } from '../models/product.model';\n\n\n@Component({\n  selector: 'app-addclientprice',\n  templateUrl: './addclientprice.component.html',\n  styleUrls: ['./addclientprice.component.css']\n})\nexport class AddclientpriceComponent implements OnInit {\n\n  \n _id: string;\n //public id: string;\n\n \n\n product: Product;\n\n // employee: Clientproduct = new Clientproduct();\n  //route: any;\n  \n\n  constructor(public dialogRef: MatDialogRef<AddclientpriceComponent>, private router: Router, private actRoute: ActivatedRoute,public fb: FormBuilder,@Inject(MAT_DIALOG_DATA) public data: any,\n  @Inject(MAT_DIALOG_DATA) private dialogData: any, private productService: ProductService ) { }\n\n  ngOnInit(){\n    this._id = this.dialogData;     \n    console.log(\"gh\"+this._id);\n   // debugger;\n    this.productService.getUser(this._id)\n      .subscribe(data => {\n      //  console.log(data,'here')\n        this.product = data;\n      }, error => console.log(error));\n     \n  }\n\n  updateUser() {\n    this.productService.updateUser(this._id, this.product)\n      .subscribe(data => {\n        console.log(data);\n        this.product = new Product();\n       \n      // this.gotoList();\n      }, error => console.log(error));\n  }\n\n  // gotoList() {\n  //   window.location.reload();\n  //   this.router.navigate(['/products']);\n  // }\n\n  actionFunction() {\n    //  alert(\"You have logged out.\");\n    this. updateUser();\n      this.closeModal();\n    }\n\n\n\n    closeModal() {\n      this.dialogRef.close();\n    }\n}\n","\n<div id=\"modal-content-wrapper\">\n   \n    <form>\n        <div class=\"form-row\">\n            <div class=\"form-group col-md-6\">\n                <label for=\"productname\">Product Name</label>\n                <input type=\"text\" disabled class=\"form-control\" id=\"productname\" required [(ngModel)]=\"product.productname\"\n                    name=\"productname\">\n            </div>\n            <div class=\"form-group col-md-6\">\n                <label for=\"productcode\">Product Code</label>\n                <input type=\"text\" disabled class=\"form-control\" id=\"productcode\" required [(ngModel)]=\"product.productcode\"\n                    name=\"productcode\">\n            </div>\n        </div>\n        <div class=\"form \">\n            <div class=\"form-group col-md-6 \">\n                <label for=\"price\">Client Price</label>\n                <!-- <input type=\"textarea\" class=\"form-control\" id=\"comments\" required [(ngModel)]=\"product.comments\" name=\"comments\"> -->\n                <textarea id=\"comments\" required [(ngModel)]=\"product.comments\" name=\"comments\" rows=\"10\" cols=\"50\">\n                    </textarea>\n                \n            </div>\n</div>\n\n\n    </form>\n    <footer id=\"modal-footer\">\n        <button mat-raised-button id=\"modal-cancel-button\" style='margin-right:16px'\n            (click)=\"closeModal()\">Cancel</button>\n        <button mat-raised-button  id=\"modal-action-button\" style='margin-right:16px'\n            (click)=\"actionFunction()\" >Save</button>\n          \n    </footer>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, EventEmitter, Inject, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table'\nimport { MatSort } from '@angular/material/sort'\nimport { AfterViewInit } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { Router } from '@angular/router';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { EditproductsComponent } from '../editproducts/editproducts.component';\nimport { AddproductsComponent } from '../addproducts/addproducts.component';\nimport { AddclientpriceComponent} from '../addclientprice/addclientprice.component';\nimport { ProductService } from '../services/product.service';\nimport * as XLSX from 'xlsx';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { UsedproductService } from '../services/usedproduct.service';\n\nimport { DatePipe } from '@angular/common';\n\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n  displayedColumns: string[] = ['sno','productname','productcode','category','price','totalavailable','workshop1','workshop2','workshop3','actions'];\n\n\n  display = 'none';\n  patientdatasource: any;\n  //patientdatasource = new MatTableDataSource(  ); \n private _id :string;\n  route: any;\n  productname : string;\n  dataRow:any;\n  productleast: Object;\n\n  constructor(public matDialog: MatDialog, private productService: ProductService,private datePipe: DatePipe, private usedproductService: UsedproductService, private router: Router,  private spinner: NgxSpinnerService) { }\n  @ViewChild('scheduledOrdersPaginator') paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n \n  @Output() actionFunction = new EventEmitter();\n\n\n  ngOnInit() {\n    this.loading();\n  this.getproductleast();\n  }\n  loading() {\n    this.spinner.show();\n  \n    setTimeout(() => {\n      /** spinner ends after 5 seconds */\n      this.data();\n      this.spinner.hide();\n    }, 5000);\n  };\n\ngetproductleast()\n{\n  this.productService.getproductleast().subscribe((result) => {\n   \n    this.productleast = result;\n    console.log(this.productleast);\n  \n  })\n\n}\n\n  public doFilter = (value: string) => {\n    this.patientdatasource.filter = value.trim().toLocaleLowerCase();\n  }\n\n\n\n  data()\n  {\n    this.productService.getAll().subscribe((result) => {\n      this.patientdatasource = result;\n      console.log(this.patientdatasource);\n      this.patientdatasource = new MatTableDataSource(this.patientdatasource);\n      this.patientdatasource.paginator = this.paginator;\n      this.patientdatasource.sort = this.sort;\n     \n\n    })\n  }\n\n  openModal(val) {\n    console.log(val);\n    \n    const dialogConfig = new MatDialogConfig();\n    // The user can't close the dialog by clicking outside its body\n    dialogConfig.disableClose = true;\n\n    dialogConfig.id = \"modal-component\";\n    dialogConfig.height = \"550px\";\n    dialogConfig.width = \"850px\";\n    dialogConfig.data = val._id;\n    // https://material.angular.io/components/dialog/overview\n    const modalDialog = this.matDialog.open(EditproductsComponent, dialogConfig);\n   \n}\n\ndeleteUser(_id: string,productname:string) {\n  if(confirm(\"Are you sure to delete \"+ productname)) {\n  this.productService.deleteUser(_id)\n    .subscribe(\n      data => {\n        console.log(data);\n      //  this.reloadData();\n      },\n      error => console.log(error));\n      window.location.reload();\n}}\n\n\npublic  getRecord(row : any){\n  console.log(row);\n  this.dataRow = row;\n // this.dataRow.createddate = this.datePipe.transform(row.value, 'yyyy-MM-dd');\n \n\n   this.usedproductService.adddispatchproducts(this.dataRow)\n        .subscribe((res) => {\n          console.log(res)\n         // this.addProduct.reset();\n         // this.actionFunction();\n        // this.getaddproducts();\n        // window.location.reload();\n        })\n}\n\n\nopenModal1() {\n  const dialogConfig = new MatDialogConfig();\n  // The user can't close the dialog by clicking outside its body\n  dialogConfig.disableClose = true;\n  dialogConfig.id = \"modal-component\";\n  dialogConfig.height = \"550px\";\n  dialogConfig.width = \"850px\";\n  \n  const modalDialog = this.matDialog.open(AddproductsComponent, dialogConfig);\n}\n\n\nopenModal2(val) {\n  const dialogConfig = new MatDialogConfig();\n  // The user can't close the dialog by clicking outside its body\n  dialogConfig.disableClose = true;\n  dialogConfig.id = \"modal-component\";\n  dialogConfig.height = \"550px\";\n  dialogConfig.width = \"850px\";\n  dialogConfig.data = val._id;\n  const modalDialog = this.matDialog.open(AddclientpriceComponent, dialogConfig);\n}\n\n\nExportTOExcel()\n{\n  console.log(\"export\");\n  const workSheet = XLSX.utils.json_to_sheet(this.patientdatasource.data, {header:[]});\n  workSheet['!cols'] = [];\n  workSheet['!cols'][0] = { hidden: true };  \n  workSheet['!cols'][9] = { hidden: true }; \n  const workBook: XLSX.WorkBook = XLSX.utils.book_new();\n  XLSX.utils.book_append_sheet(workBook, workSheet, 'SheetName');\n  XLSX.writeFile(workBook, 'Products.xlsx');\n\n}\n\n\n}\n","<!-- <div>\n  <mat-form-field >\n    <input matInput type=\"text\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Filter\">\n  </mat-form-field>\n\n    <button mat-raised-button  style=\"color:black;display: block;margin-block-start: 20px;margin-left: 1200px;margin-bottom: 0%;\"  (click)=\"openModal1()\">Add Products</button>\n  </div> -->\n  <ngx-spinner bdColor = \"rgba(0, 0, 0, 0.8)\" size = \"medium\" color = \"#1863c5\" type = \"square-jelly-box\" [fullScreen] = \"true\"><p style=\"color: white\" > Loading... </p></ngx-spinner>\n  <div class=\"form-row parent\">\n    <div class=\"col-md-6\" fxFlex=\"40%\">\n      <mat-form-field style=\"text-align:center;text-decoration: black;\">\n        <input matInput type=\"text\" style=\"color:purple;\" (keyup)=\"doFilter($event.target.value)\" placeholder=\"Filter\">\n      </mat-form-field>\n   </div>\n  \n    <div >\n      <button mat-button   style=\"color:#ffffff;background-color:#003366;\" (click)=\"openModal1()\">Add Products</button>\n      &nbsp;&nbsp;&nbsp; \n      <button mat-button style=\"color:#ffffff;background-color:#003366; \" (click)=\"ExportTOExcel()\"><mat-icon style=\"margin-right: 10px;\">get_app</mat-icon>Export</button>\n  </div>\n  \n  </div>\n\n\n\n\n\n\n\n\n    <div class=\" test mat-elevation-z9\">\n      \n     \n    <mat-table class=\"lessons-table mat-elevation-z8\"  [dataSource]=\"patientdatasource\" matSort  matSortStart=\"desc\" >\n      <ng-container matColumnDef=\"sno\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header>S.No</mat-header-cell>\n        <mat-cell *matCellDef=\"let lesson;let i = index\" >{{ i + 1 }}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"productname\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Product Name</mat-header-cell>\n          <mat-cell *matCellDef=\"let lesson\">{{lesson.productname}}</mat-cell>\n      </ng-container>\n      <ng-container matColumnDef=\"productcode\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header >Product Code</mat-header-cell>\n          <mat-cell  *matCellDef=\"let lesson\">{{lesson.productcode}}</mat-cell>  \n      </ng-container>\n      <ng-container matColumnDef=\"category\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header >Category</mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\">{{lesson.category}}</mat-cell>  \n    </ng-container>\n      <!-- <ng-container matColumnDef=\"category\">\n          <mat-header-cell *matHeaderCellDef mat-sort-header>Category</mat-header-cell>\n          <mat-cell  *matCellDef=\"let lesson\">{{lesson.category}}</mat-cell>\n      </ng-container> -->\n      <ng-container matColumnDef=\"price\">\n        <mat-header-cell *matHeaderCellDef mat-sort-header> Price </mat-header-cell>\n        <mat-cell  *matCellDef=\"let lesson\">{{lesson.price}}</mat-cell>\n    </ng-container>\n     \n    <ng-container matColumnDef=\"totalavailable\">\n      <mat-header-cell *matHeaderCellDef mat-sort-header>Total Available</mat-header-cell>\n      <mat-cell  *matCellDef=\"let lesson\">{{lesson.totalavailable}}</mat-cell>\n  </ng-container>\n  <ng-container matColumnDef=\"workshop1\">\n    <mat-header-cell *matHeaderCellDef mat-sort-header>Workshop 1</mat-header-cell>\n    <mat-cell  *matCellDef=\"let lesson\">{{lesson.workshop1}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"workshop2\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header> Workshop 2</mat-header-cell>\n  <mat-cell  *matCellDef=\"let lesson\" >{{lesson.workshop2}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"workshop3\">\n  <mat-header-cell *matHeaderCellDef mat-sort-header>Workshop 3</mat-header-cell>\n  <mat-cell  *matCellDef=\"let lesson\" [ngClass]=\"'w-75'\">{{lesson.workshop3}}</mat-cell>\n</ng-container>\n<ng-container matColumnDef=\"actions\">\n  <th mat-header-cell  *matHeaderCellDef > Actions </th>\n  <td mat-cell *matCellDef=\"let lesson\"  >\n    <!-- <button mat-button >Edit</button> -->\n    <button mat-icon-button  matTooltip=\"Edit\" matTooltipPosition=\"above\" color=\"warn\"  (click)=\"openModal(lesson)\"><mat-icon>more_vert</mat-icon></button>\n    <button mat-icon-button  matTooltip=\"Client Price\" matTooltipPosition=\"above\" color=\"warn\" (click)=\"openModal2(lesson)\"><mat-icon>person_outline</mat-icon></button>\n    <button mat-icon-button  matTooltip=\"Delete Product\" matTooltipPosition=\"above\" color=\"warn\" (click)=\"deleteUser(lesson._id,lesson.productname)\"  ><mat-icon>delete</mat-icon></button>\n\n  </td>\n\n</ng-container>\n  \n      <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n      <mat-row *matRowDef=\"let row; columns: displayedColumns\" ></mat-row>\n  \n  </mat-table>\n  <mat-paginator #scheduledOrdersPaginator [pageSizeOptions]=\"[5, 10, 15]\" showFirstLastButtons></mat-paginator>\n\n  <!-- <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\" (page)=\"setPageSizeOptions($event)\">\n  </mat-paginator> -->\n\n\n</div>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}